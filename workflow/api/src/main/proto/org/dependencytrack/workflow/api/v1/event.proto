/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
syntax = "proto3";

package org.dependencytrack.workflow.api.v1;

import "google/protobuf/timestamp.proto";
import "org/dependencytrack/workflow/api/v1/common.proto";
import "org/dependencytrack/workflow/api/v1/failure.proto";
import "org/dependencytrack/workflow/api/v1/payload.proto";

option java_multiple_files = true;
option java_package = "org.dependencytrack.workflow.api.proto.v1";

message WorkflowEvent {
  int32 id = 1;

  google.protobuf.Timestamp timestamp = 2;

  oneof subject {
    ExecutionStarted execution_started = 25;
    ExecutionCompleted execution_completed = 26;

    RunScheduled run_scheduled = 50;
    RunStarted run_started = 51;
    RunCancelled run_cancelled = 52;
    RunSuspended run_suspended = 53;
    RunResumed run_resumed = 54;
    RunCompleted run_completed = 55;

    ActivityTaskScheduled activity_task_scheduled = 75;
    ActivityTaskCompleted activity_task_completed = 76;
    ActivityTaskFailed activity_task_failed = 77;

    SubWorkflowRunScheduled sub_workflow_run_scheduled = 100;
    SubWorkflowRunCompleted sub_workflow_run_completed = 101;
    SubWorkflowRunFailed sub_workflow_run_failed = 102;

    TimerScheduled timer_scheduled = 125;
    TimerElapsed timer_elapsed = 126;

    SideEffectExecuted side_effect_executed = 150;

    ExternalEventReceived external_event_received = 151;
  }
}

message ParentWorkflowRun {
  int32 sub_workflow_run_scheduled_event_id = 1;
  string run_id = 2;
  string workflow_name = 3;
  int32 workflow_version = 4;
}

message ExecutionStarted {
}

message ExecutionCompleted {
}

message RunScheduled {
  string workflow_name = 1;
  int32 workflow_version = 2;
  optional WorkflowPayload argument = 3;
  optional string concurrency_group_id = 4;
  optional int32 priority = 5;
  map<string, string> labels = 6;
  optional ParentWorkflowRun parent_run = 7;
}

message RunStarted {
}

message RunCancelled {
  string reason = 1;
}

message RunSuspended {
}

message RunResumed {
}

message RunCompleted {
  WorkflowRunStatus status = 1;
  optional string custom_status = 2;
  optional WorkflowPayload result = 3;
  optional WorkflowFailure failure = 4;
}

message ActivityTaskScheduled {
  string name = 1;
  int32 version = 2;
  optional int32 priority = 3;
  optional WorkflowPayload argument = 4;
  optional google.protobuf.Timestamp scheduled_for = 5;
}

message ActivityTaskCompleted {
  int32 task_scheduled_event_id = 1;
  optional WorkflowPayload result = 2;
}

message ActivityTaskFailed {
  int32 task_scheduled_event_id = 1;
  WorkflowFailure failure = 2;
}

message SubWorkflowRunScheduled {
  string run_id = 1;
  string workflow_name = 2;
  int32 workflow_version = 3;
  optional string concurrency_group_id = 4;
  optional int32 priority = 5;
  map<string, string> labels = 6;
  optional WorkflowPayload argument = 7;
}

message SubWorkflowRunCompleted {
  int32 run_scheduled_event_id = 1;
  optional WorkflowPayload result = 2;
}

message SubWorkflowRunFailed {
  int32 run_scheduled_event_id = 1;
  WorkflowFailure failure = 2;
}

message TimerScheduled {
  string name = 1;
  google.protobuf.Timestamp elapse_at = 2;
}

message TimerElapsed {
  int32 timer_scheduled_event_id = 1;
  google.protobuf.Timestamp elapse_at = 2;
}

message SideEffectExecuted {
  int32 side_effect_event_id = 1;
  string name = 2;
  optional WorkflowPayload result = 3;
}

message ExternalEventReceived {
  string id = 1;
  optional WorkflowPayload content = 2;
}