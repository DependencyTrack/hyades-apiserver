<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<!--
  ~ This file is part of Dependency-Track.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~ Copyright (c) OWASP Foundation. All Rights Reserved.
  -->
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
            http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
    <changeSet id="v5.7.0-1" author="nscuro">
        <sql>
            create type workflow_run_status as enum (
              'CREATED'
            , 'RUNNING'
            , 'SUSPENDED'
            , 'CANCELED'
            , 'COMPLETED'
            , 'FAILED'
            );

            create table workflow_run (
              id uuid
            , parent_id uuid
            , workflow_name text not null
            , workflow_version smallint not null
            , status workflow_run_status not null default 'CREATED'
            , custom_status text
            , concurrency_group_id text
            , priority smallint
            , labels jsonb
            , locked_by text
            , locked_until timestamptz(3)
            , created_at timestamptz(3) not null default now()
            , updated_at timestamptz(3)
            , started_at timestamptz(3)
            , completed_at timestamptz(3)
            , constraint workflow_run_pk primary key (id)
            , constraint workflow_run_parent_fk foreign key (parent_id) references workflow_run (id) on delete cascade
            ) with (autovacuum_vacuum_scale_factor = 0.02, fillfactor = 90);

            create table workflow_concurrency_group (
              id text
            , next_run_id uuid not null
            , constraint workflow_concurrency_group_pk primary key (id)
            , constraint workflow_concurrency_group_next_run_fk foreign key (next_run_id) references workflow_run (id) on delete cascade
            ) with (autovacuum_vacuum_scale_factor = 0.02, fillfactor = 90);

            create table workflow_run_history (
              workflow_run_id uuid
            , sequence_number int
            , event bytea not null
            , constraint workflow_run_history_pk primary key (workflow_run_id, sequence_number)
            , constraint workflow_run_history_workflow_run_fk foreign key (workflow_run_id) references workflow_run (id) on delete cascade
            );

            create table workflow_run_inbox (
              id bigint generated always as identity
            , workflow_run_id uuid not null
            , visible_from timestamptz(3)
            , locked_by text
            , dequeue_count smallint
            , event bytea not null
            , constraint workflow_run_inbox_pk primary key (id)
            ) with (autovacuum_vacuum_scale_factor = 0.02, fillfactor = 90);

            create table workflow_activity_task (
              workflow_run_id uuid
            , scheduled_event_id int
            , activity_name text not null
            , priority smallint
            , argument bytea
            , visible_from timestamptz(3)
            , locked_by text
            , locked_until timestamptz(3)
            , created_at timestamptz(3) not null default now()
            , updated_at timestamptz(3)
            , constraint workflow_activity_task_pk primary key (workflow_run_id, scheduled_event_id)
            , constraint workflow_activity_task_workflow_run_fk foreign key (workflow_run_id) references workflow_run (id) on delete cascade
            ) with (autovacuum_vacuum_scale_factor = 0.02, fillfactor = 90);

            create table workflow_schedule (
              name text not null
            , cron text not null
            , workflow_name text not null
            , workflow_version smallint not null
            , concurrency_group_id text
            , priority smallint
            , labels jsonb
            , argument bytea
            , created_at timestamptz(3) not null default now()
            , updated_at timestamptz(3)
            , last_fired_at timestamptz(3)
            , next_fire_at timestamptz(3) not null
            , constraint workflow_schedule_pk primary key (name)
            );

            create index workflow_run_poll_idx
                on workflow_run (priority desc nulls last, id, workflow_name)
             where status = any(cast('{CREATED, RUNNING, SUSPENDED}' as workflow_run_status[]));

            create index workflow_run_labels_idx
                on workflow_run using gin (labels jsonb_path_ops)
                where labels is not null;

            create index workflow_run_created_at_idx
                on workflow_run (created_at);

            create index workflow_run_completed_at_idx
                on workflow_run (completed_at)
                where completed_at is not null;

            create index workflow_run_inbox_workflow_run_id_idx
                on workflow_run_inbox (workflow_run_id);

            create index workflow_activity_task_poll_idx
                on workflow_activity_task (priority desc nulls last, created_at, activity_name);
        </sql>
    </changeSet>
</databaseChangeLog>