/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.policy.vulnerability;

import java.util.NoSuchElementException;
import java.util.ServiceLoader;

public class VulnerabilityPolicyProviderFactory {

    private static VulnerabilityPolicyProviderFactory PROVIDER_FACTORY_INSTANCE;
    private ServiceLoader<VulnerabilityPolicyProvider> loader;

    private VulnerabilityPolicyProviderFactory() {
        loader = ServiceLoader.load(VulnerabilityPolicyProvider.class);
    }

    public static VulnerabilityPolicyProviderFactory getInstance() {
        if(PROVIDER_FACTORY_INSTANCE == null) {
            PROVIDER_FACTORY_INSTANCE = new VulnerabilityPolicyProviderFactory();
        }
        return PROVIDER_FACTORY_INSTANCE;
    }

    public VulnerabilityPolicyProvider policyProviderImpl() {
        VulnerabilityPolicyProvider provider = this.loader.iterator().next();
        if(provider != null) {
            return provider;
        } else {
            throw new NoSuchElementException("No implementation for Vulnerability Policy Provider");
        }
    }
}
