/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.tasks.vulnerabilitypolicy.blobstorage;

import alpine.test.config.ConfigPropertyRule;
import alpine.test.config.WithConfigProperty;
import org.junit.Rule;
import org.junit.Test;
import org.junit.jupiter.api.Assertions;

import javax.naming.OperationNotSupportedException;

import static org.assertj.core.api.Assertions.assertThat;


public class BlobStorageHandlerFactoryTest {

    @Rule
    public final ConfigPropertyRule configPropertyRule = new ConfigPropertyRule();

    @Test
    @WithConfigProperty("vulnerability.policy.bundle.source.type=test")
    public void createBlobStorageHandlerForGenericTest() {
        Assertions.assertThrows(OperationNotSupportedException.class, BlobStorageAccessFactory::createStorageHandler);

    }

    @Test
    @WithConfigProperty({
            "vulnerability.policy.bundle.source.type=s3",
            "vulnerability.policy.bundle.url=https://example.com",
            "vulnerability.policy.s3.bundle.name=foo",
            "vulnerability.policy.s3.bucket.name=foo-bucket",
            "vulnerability.policy.s3.access.key=foo-access-key",
            "vulnerability.policy.s3.secret.key=foo-secret-key"
    })
    public void createBlobStorageHandlerForS3Test() throws OperationNotSupportedException {
        BlobStorageAccessHandler handler = BlobStorageAccessFactory.createStorageHandler();
        assertThat(handler).isInstanceOf(S3StorageHandler.class);

    }

    @Test
    @WithConfigProperty("vulnerability.policy.bundle.source.type=nginx")
    public void createBlobStorageHandlerForNginxTest() throws OperationNotSupportedException {
        BlobStorageAccessHandler handler = BlobStorageAccessFactory.createStorageHandler();
        assertThat(handler).isInstanceOf(NginxStorageHandler.class);

    }
}
