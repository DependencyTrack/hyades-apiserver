<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.dependencytrack</groupId>
        <artifactId>dependency-track-parent</artifactId>
        <version>5.6.0-SNAPSHOT</version>
    </parent>

    <artifactId>apiserver</artifactId>
    <packaging>war</packaging>
    <description>The Dependency-Track API Server</description>

    <properties>
        <project.parentBaseDir>${project.basedir}/..</project.parentBaseDir>

        <!-- Dependency Versions -->
        <lib.alpine.version>3.2.0</lib.alpine.version>
        <lib.assertj.version>3.26.3</lib.assertj.version>
        <lib.awaitility.version>4.3.0</lib.awaitility.version>
        <lib.cel-tools.version>0.5.1</lib.cel-tools.version>
        <lib.cloud-sql-postgres-socket-factory.version>1.23.1</lib.cloud-sql-postgres-socket-factory.version>
        <lib.commons-compress.version>1.27.1</lib.commons-compress.version>
        <lib.cpe-parser.version>3.0.0</lib.cpe-parser.version>
        <lib.cvss-calculator.version>1.4.3</lib.cvss-calculator.version>
        <lib.owasp-rr-calculator.version>1.0.1</lib.owasp-rr-calculator.version>
        <lib.cyclonedx-java.version>10.2.1</lib.cyclonedx-java.version>
        <lib.datanucleus-postgresql.version>0.3.0</lib.datanucleus-postgresql.version>
        <lib.jaxb.runtime.version>4.0.5</lib.jaxb.runtime.version>
        <lib.jackson.version>2.18.3</lib.jackson.version>
        <lib.jackson-databind.version>2.18.3</lib.jackson-databind.version>
        <lib.jersey.version>3.1.9</lib.jersey.version>
        <lib.jdbi.version>3.47.0</lib.jdbi.version>
        <lib.json-unit.version>4.1.0</lib.json-unit.version>
        <lib.junit.version>4.13.2</lib.junit.version>
        <lib.kafka.version>3.9.0</lib.kafka.version>
        <lib.liquibase.version>4.30.0</lib.liquibase.version>
        <lib.micrometer-jvm-extras.version>0.2.2</lib.micrometer-jvm-extras.version>
        <lib.minio.version>8.5.17</lib.minio.version>
        <lib.kotlin-stdlib.version>2.0.0</lib.kotlin-stdlib.version>
        <lib.wiremock.version>3.12.1</lib.wiremock.version>
        <lib.packageurl.version>1.5.0</lib.packageurl.version>
        <lib.parallel-consumer.version>0.5.3.2</lib.parallel-consumer.version>
        <lib.pebble.version>3.2.4</lib.pebble.version>
        <lib.testcontainers.version>1.20.6</lib.testcontainers.version>
        <lib.resilience4j.version>2.2.0</lib.resilience4j.version>
        <lib.swagger.version>2.2.29</lib.swagger.version>
        <lib.swagger-parser.version>2.1.25</lib.swagger-parser.version>
        <lib.system-rules.version>1.19.0</lib.system-rules.version>
        <lib.versatile.version>0.7.0</lib.versatile.version>
        <lib.woodstox.version>7.1.0</lib.woodstox.version>
        <lib.junit-params.version>1.1.1</lib.junit-params.version>
        <lib.log4j-over-slf4j.version>2.0.17</lib.log4j-over-slf4j.version>
        <lib.httpclient.version>4.5.14</lib.httpclient.version>
        <lib.net.javacrumbs.shedlock.version>6.3.1</lib.net.javacrumbs.shedlock.version>
        <lib.javacron.version>1.4.0</lib.javacron.version>
        <lib.jdbc-driver.postgresql.version>42.7.5</lib.jdbc-driver.postgresql.version>

        <!-- CycloneDX CLI -->
        <cyclonedx-cli.path>cyclonedx</cyclonedx-cli.path>
        <services.bom.merge.skip>true</services.bom.merge.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>us.springett</groupId>
                <artifactId>alpine-parent</artifactId>
                <version>${lib.alpine.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- Managed dependencies to exclude/override vulnerable version of kotlin-stdlib-jdk8 -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${lib.kotlin-stdlib.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.dependencytrack</groupId>
            <artifactId>proto</artifactId>
        </dependency>

        <!-- Alpine -->
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>alpine-common</artifactId>
            <version>${lib.alpine.version}</version>
        </dependency>
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>alpine-model</artifactId>
            <version>${lib.alpine.version}</version>
        </dependency>
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>alpine-infra</artifactId>
            <version>${lib.alpine.version}</version>
        </dependency>
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>alpine-server</artifactId>
            <version>${lib.alpine.version}</version>
            <exclusions>
                <!-- this exclusion done to get rid of vulnerability in the project as this transitive dependency is not being used in the project
                Vulnerability : CVE-2022-1471 (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1471 ) -->
                <exclusion>
                    <groupId>org.yaml</groupId>
                    <artifactId>snakeyaml</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>alpine-executable-war</artifactId>
            <version>${lib.alpine.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Common Expression Language (CEL) -->
        <dependency>
            <groupId>org.projectnessie.cel</groupId>
            <artifactId>cel-tools</artifactId>
            <version>${lib.cel-tools.version}</version>
        </dependency>
        <!-- CVSS Calculator -->
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>cvss-calculator</artifactId>
            <version>${lib.cvss-calculator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-core</artifactId>
            <version>${lib.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-jackson2</artifactId>
            <version>${lib.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-sqlobject</artifactId>
            <version>${lib.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-postgres</artifactId>
            <version>${lib.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-freemarker</artifactId>
            <version>${lib.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-micrometer</artifactId>
            <version>${lib.jersey.version}</version>
        </dependency>
        <!-- OWASP Risk Rating calculator -->
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>owasp-risk-rating-calculator</artifactId>
            <version>${lib.owasp-rr-calculator.version}</version>
        </dependency>
        <!-- CPE Parser -->
        <dependency>
            <groupId>us.springett</groupId>
            <artifactId>cpe-parser</artifactId>
            <version>${lib.cpe-parser.version}</version>
        </dependency>
        <!-- CycloneDX -->
        <dependency>
            <groupId>org.cyclonedx</groupId>
            <artifactId>cyclonedx-core-java</artifactId>
            <version>${lib.cyclonedx-java.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.nscuro</groupId>
            <artifactId>datanucleus-postgresql</artifactId>
            <version>${lib.datanucleus-postgresql.version}</version>
        </dependency>

        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <version>2.1.3</version>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- org.json
        This was previously transitively included with Unirest. However, Unirest v3.x removed reliance on org.json
        in favor of their own API compatible replacement. Therefore, it was necessary to directly include org.json.
        Removal of org.json is documented in https://github.com/DependencyTrack/dependency-track/issues/1113 -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20250107</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-jakarta</artifactId>
            <version>${lib.swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations-jakarta</artifactId>
            <version>${lib.swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>${lib.swagger-parser.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>${lib.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${lib.jackson.version}</version>
        </dependency>

        <!-- Package URL -->
        <dependency>
            <groupId>com.github.package-url</groupId>
            <artifactId>packageurl-java</artifactId>
            <version>${lib.packageurl.version}</version>
        </dependency>

        <dependency>
            <groupId>io.confluent.parallelconsumer</groupId>
            <artifactId>parallel-consumer-core</artifactId>
            <version>${lib.parallel-consumer.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${lib.kafka.version}</version>
        </dependency>

        <!-- shedlock dependencies -->
        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-provider-jdbc</artifactId>
            <version>${lib.net.javacrumbs.shedlock.version}</version>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-provider-jdbc-internal</artifactId>
            <version>${lib.net.javacrumbs.shedlock.version}</version>
        </dependency>
        <dependency>
            <groupId>com.asahaf.javacron</groupId>
            <artifactId>javacron</artifactId>
            <version>${lib.javacron.version}</version>
        </dependency>
        <!-- Micrometer Metrics -->
        <dependency>
            <groupId>io.github.mweirauch</groupId>
            <artifactId>micrometer-jvm-extras</artifactId>
            <version>${lib.micrometer-jvm-extras.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.micrometer</groupId>
                    <artifactId>micrometer-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Pebble templating engine -->
        <dependency>
            <groupId>io.pebbletemplates</groupId>
            <artifactId>pebble</artifactId>
            <version>${lib.pebble.version}</version>
        </dependency>
        <!-- Protobuf -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${lib.httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${lib.httpclient.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
            <version>${lib.woodstox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.nscuro</groupId>
            <artifactId>versatile</artifactId>
            <version>${lib.versatile.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-artifact</artifactId>
            <version>3.9.9</version>
        </dependency>

        <dependency>
            <groupId>org.wiremock</groupId>
            <artifactId>wiremock-standalone</artifactId>
            <version>${lib.wiremock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Bundle JDBC drivers -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${lib.jdbc-driver.postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.cloud.sql</groupId>
            <artifactId>postgres-socket-factory</artifactId>
            <version>${lib.cloud-sql-postgres-socket-factory.version}</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${lib.liquibase.version}</version>
        </dependency>

        <!-- Commons Compress -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${lib.commons-compress.version}</version>
        </dependency>
        <!-- Resilience4J -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-retry</artifactId>
            <version>${lib.resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-micrometer</artifactId>
            <version>${lib.resilience4j.version}</version>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${lib.log4j-over-slf4j.version}</version>
        </dependency>
        <!-- YAML -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${lib.jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>${lib.minio.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${lib.junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${lib.junit-params.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${lib.jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.connectors</groupId>
            <artifactId>jersey-grizzly-connector</artifactId>
            <version>${lib.jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>${lib.system-rules.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit-assertj</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${lib.testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>minio</artifactId>
            <version>${lib.testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${lib.testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${lib.awaitility.version}</version>
            <scope>test</scope>
        </dependency>

        <!--
          Dependencies required by executable WAR as overlays.
          Refer to the maven-war-plugin declaration in the build section.
         -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${lib.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${lib.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${lib.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.owasp</groupId>
            <artifactId>security-logging-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.owasp</groupId>
            <artifactId>security-logging-logback</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>dependency-track-apiserver</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>META-INF/MANIFEST.MF</include>
                    <include>application.version</include>
                    <include>openapi-configuration.yaml</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>us.springett</groupId>
                <artifactId>maven-uuid-generator</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>generate-uuid</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>${project.basedir}/src/test/resources/logging.properties</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>copy-and-rename-file</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${project.basedir}/src/main/resources/logback.xml</sourceFile>
                            <destinationFile>${project.build.directory}/${project.build.finalName}/logback.xml</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.datanucleus</groupId>
                <artifactId>datanucleus-maven-plugin</artifactId>
                <version>6.0.0-release</version>
                <configuration>
                    <api>JDO</api>
                    <persistenceUnitName>Alpine</persistenceUnitName>
                    <verbose>true</verbose>
                    <fork>false</fork>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!--
                      The DataNucleus Enhancer still depends on SLF4J 1.x and will
                      fail if that version is not present.
                    -->
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                        <version>1.7.36</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>cyclonedx-aggregate</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>makeBom</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <projectType>application</projectType>
                    <schemaVersion>1.4</schemaVersion>
                    <includeCompileScope>true</includeCompileScope>
                    <includeProvidedScope>true</includeProvidedScope>
                    <includeRuntimeScope>true</includeRuntimeScope>
                    <includeSystemScope>true</includeSystemScope>
                    <includeTestScope>false</includeTestScope>
                    <includeLicenseText>false</includeLicenseText>
                    <outputReactorProjects>false</outputReactorProjects>
                    <outputFormat>json</outputFormat>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>merge-services-bom</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${cyclonedx-cli.path}</executable>
                            <arguments>
                                <argument>merge</argument>
                                <argument>--input-files</argument>
                                <argument>${project.build.directory}/bom.json</argument>
                                <argument>${project.basedir}/src/main/resources/services.bom.json</argument>
                                <argument>--output-file</argument>
                                <argument>${project.build.directory}/bom.json</argument>
                            </arguments>
                            <skip>${services.bom.merge.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>deploy-bom</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <copy file="${project.build.directory}/bom.json"
                                      tofile="${project.build.directory}/${project.build.finalName}/.well-known/sbom"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>rename-war-file</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <move file="${project.build.directory}/${project.build.finalName}.war"
                                      tofile="${project.build.directory}/${project.build.finalName}.jar" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <warName>dependency-track-apiserver</warName>
                    <archive>
                        <manifest>
                            <mainClass>alpine.embedded.EmbeddedJettyServer</mainClass>
                        </manifest>
                    </archive>
                    <attachClasses>true</attachClasses>
                    <packagingExcludes>WEB-INF/lib/executable-war-*.jar</packagingExcludes>
                    <dependentWarExcludes>WEB-INF/lib/*log4j*.jar,WEB-INF/lib/*slf4j*.jar</dependentWarExcludes>
                    <overlays>
                        <overlay>
                            <groupId>us.springett</groupId>
                            <artifactId>alpine-executable-war</artifactId>
                            <type>jar</type>
                        </overlay>
                        <overlay>
                            <groupId>org.owasp</groupId>
                            <artifactId>security-logging-common</artifactId>
                            <type>jar</type>
                        </overlay>
                        <overlay>
                            <groupId>org.owasp</groupId>
                            <artifactId>security-logging-logback</artifactId>
                            <type>jar</type>
                        </overlay>
                        <overlay>
                            <groupId>net.logstash.logback</groupId>
                            <artifactId>logstash-logback-encoder</artifactId>
                            <type>jar</type>
                        </overlay>
                        <overlay>
                            <groupId>com.fasterxml.jackson.core</groupId>
                            <artifactId>jackson-annotations</artifactId>
                            <type>jar</type>
                        </overlay>
                        <overlay>
                            <groupId>com.fasterxml.jackson.core</groupId>
                            <artifactId>jackson-core</artifactId>
                            <type>jar</type>
                        </overlay>
                        <overlay>
                            <groupId>com.fasterxml.jackson.core</groupId>
                            <artifactId>jackson-databind</artifactId>
                            <type>jar</type>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty.ee10</groupId>
                <artifactId>jetty-ee10-maven-plugin</artifactId>
                <version>12.0.19</version>
                <configuration>
                    <webApp>
                        <!-- Disable classpath scanning. -->
                        <containerIncludeJarPattern>^$</containerIncludeJarPattern>
                        <webInfIncludeJarPattern>^$</webInfIncludeJarPattern>
                    </webApp>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${lib.liquibase.version}</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev-services</id>
            <properties>
                <!-- Don't compile test classes, we only want to run Jetty. -->
                <maven.test.skip>true</maven.test.skip>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${lib.testcontainers.version}</version>
                    <scope>compile</scope>
                </dependency>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>kafka</artifactId>
                    <version>${lib.testcontainers.version}</version>
                    <scope>compile</scope>
                </dependency>
                <dependency>
                    <!--
                        Unfortunately required by testcontainers:
                        https://github.com/testcontainers/testcontainers-java/issues/970
                    -->
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>${lib.junit.version}</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jetty.ee10</groupId>
                        <artifactId>jetty-ee10-maven-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <dev.services.enabled>true</dev.services.enabled>
                            </systemProperties>
                            <webApp>
                                <!-- Disable classpath scanning. -->
                                <containerIncludeJarPattern>^$</containerIncludeJarPattern>
                                <webInfIncludeJarPattern>^$</webInfIncludeJarPattern>
                            </webApp>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>