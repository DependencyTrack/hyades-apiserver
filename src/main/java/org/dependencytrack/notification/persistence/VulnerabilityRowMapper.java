package org.dependencytrack.notification.persistence;

import org.apache.commons.lang3.StringUtils;
import org.dependencytrack.parser.common.resolver.CweResolver;
import org.dependencytrack.proto.notification.v1.Vulnerability;
import org.jdbi.v3.core.mapper.RowMapper;
import org.jdbi.v3.core.statement.StatementContext;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Objects;
import java.util.Optional;

import static org.apache.commons.lang3.StringUtils.trimToEmpty;

public class VulnerabilityRowMapper implements RowMapper<Vulnerability> {

    @Override
    public Vulnerability map(final ResultSet rs, final StatementContext ctx) throws SQLException {
        return Vulnerability.newBuilder()
                .setUuid(trimToEmpty(rs.getString("vulnUuid")))
                .setVulnId(trimToEmpty(rs.getString("vulnId")))
                .setSource(trimToEmpty(rs.getString("vulnSource")))
                .setTitle(trimToEmpty(rs.getString("vulnTitle")))
                .setSubTitle(trimToEmpty(rs.getString("vulnSubTitle")))
                .setDescription(trimToEmpty(rs.getString("vulnDescription")))
                .setRecommendation(trimToEmpty(rs.getString("vulnRecommendation")))
                .setCvssV2(rs.getDouble("vulnCvssV2BaseScore"))
                .setCvssV3(rs.getDouble("vulnCvssV3BaseScore"))
                .setOwaspRrBusinessImpact(rs.getDouble("vulnOwaspRrBusinessImpactScore"))
                .setOwaspRrLikelihood(rs.getDouble("vulnOwaspRrLikelihoodScore"))
                .setOwaspRrTechnicalImpact(rs.getDouble("vulnOwaspRrTechnicalImpactScore"))
                .setSeverity(trimToEmpty(rs.getString("vulnSeverity")))
                .addAllCwes(Optional.ofNullable(rs.getString("vulnCwes")).stream()
                        .flatMap(cwes -> Arrays.stream(cwes.split(",")))
                        .map(StringUtils::trimToNull)
                        .filter(Objects::nonNull)
                        .map(CweResolver.getInstance()::lookup)
                        .map(cwe -> Vulnerability.Cwe.newBuilder()
                                .setCweId(cwe.getCweId())
                                .setName(cwe.getName())
                                .build())
                        .toList())
                .build();
    }

}
