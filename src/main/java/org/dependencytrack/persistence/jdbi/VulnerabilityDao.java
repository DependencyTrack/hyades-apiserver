/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.persistence.jdbi;

import org.dependencytrack.model.Vulnerability;
import org.jdbi.v3.sqlobject.SqlObject;
import org.jdbi.v3.sqlobject.config.RegisterBeanMapper;
import org.jdbi.v3.sqlobject.config.RegisterConstructorMapper;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.statement.SqlQuery;

import java.util.List;

public interface VulnerabilityDao extends SqlObject {

    @SqlQuery("""
            SELECT * FROM public."VULNERABILITY"
            INNER JOIN "COMPONENTS_VULNERABILITIES"
                ON "VULNERABILITY"."ID" = "COMPONENTS_VULNERABILITIES"."VULNERABILITY_ID"
                AND "COMPONENTS_VULNERABILITIES"."COMPONENT_ID" = ?
            LEFT JOIN "EPSS"
            	ON "VULNERABILITY"."VULNID" = "EPSS"."CVE"
            """)
    @RegisterBeanMapper(Vulnerability.class)
    List<Vulnerability> getVulnerabilitiesByComponent(@Bind Long componentId);

    @SqlQuery("""
            SELECT "VULNERABILITY"."ID" AS "id"
                , COUNT("PROJECT"."ID") AS "totalProjectCount"
                , COUNT(*) FILTER (WHERE "PROJECT"."ACTIVE") AS "activeProjectCount"
            FROM "VULNERABILITY"
            INNER JOIN "COMPONENTS_VULNERABILITIES"
             	ON "VULNERABILITY"."ID" = "COMPONENTS_VULNERABILITIES"."VULNERABILITY_ID"
            INNER JOIN "COMPONENT"
              	ON "COMPONENTS_VULNERABILITIES"."COMPONENT_ID" = "COMPONENT"."ID"
            INNER JOIN "PROJECT"
            	ON "COMPONENT"."PROJECT_ID" = "PROJECT"."ID"
            LEFT JOIN "ANALYSIS"
            	ON "VULNERABILITY"."ID" = "ANALYSIS"."VULNERABILITY_ID"
            	AND "COMPONENT"."PROJECT_ID" = "ANALYSIS"."PROJECT_ID"
            	AND (:includeSuppressed OR "ANALYSIS"."SUPPRESSED" IS NULL OR NOT "ANALYSIS"."SUPPRESSED")
            WHERE "VULNERABILITY"."ID" = ANY(:vulnerabilityIds)
            GROUP BY "VULNERABILITY"."ID"
            """)
    @RegisterConstructorMapper(VulnerabilityProjectCountRow.class)
    List<VulnerabilityProjectCountRow> getVulnerabilityProjectCount(@Bind List<Long> vulnerabilityIds, @Bind boolean includeSuppressed);

    record VulnerabilityProjectCountRow(
            long id,
            int totalProjectCount,
            int activeProjectCount
    ) {
    }
}
