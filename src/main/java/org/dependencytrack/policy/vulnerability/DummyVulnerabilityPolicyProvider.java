package org.dependencytrack.policy.vulnerability;

import org.dependencytrack.policy.vulnerability.VulnerabilityPolicyAnalysis.Justification;
import org.dependencytrack.policy.vulnerability.VulnerabilityPolicyAnalysis.State;
import org.dependencytrack.policy.vulnerability.VulnerabilityPolicyRating.Method;
import org.dependencytrack.policy.vulnerability.VulnerabilityPolicyRating.Severity;
import org.dependencytrack.proto.policy.v1.Project;

import java.util.List;

class DummyVulnerabilityPolicyProvider implements VulnerabilityPolicyProvider {

    @Override
    public List<VulnerabilityPolicy> getApplicablePolicies(final Project project) {
        final var analysis = new VulnerabilityPolicyAnalysis();
        analysis.setState(State.NOT_AFFECTED);
        analysis.setJustification(Justification.CODE_NOT_REACHABLE);

        final var rating = new VulnerabilityPolicyRating();
        rating.setMethod(Method.CVSSv3);
        rating.setSeverity(Severity.MEDIUM);

        final var policy = new VulnerabilityPolicy();
        policy.setName("Example");
        policy.setConditions(List.of(
                "component.purl.matches('^pkg:maven.*')",
                "component.name == 'jackson-databind' && component.matches_range('vers:maven/>2|<3')",
                "!component.is_dependency_of(org.dependencytrack.policy.v1.Component{name: 'bar'})"
        ));
        policy.setAnalysis(analysis);
        policy.setRatings(List.of(rating));

        return List.of(policy);
    }

}
