package org.dependencytrack.model;

import alpine.common.validation.RegexSequence;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.dependencytrack.policy.vulnerability.VulnerabilityPolicyAnalysis;
import org.dependencytrack.policy.vulnerability.VulnerabilityPolicyRating;

import javax.jdo.annotations.Column;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.Index;
import javax.jdo.annotations.PersistenceCapable;
import javax.jdo.annotations.Persistent;
import javax.jdo.annotations.PrimaryKey;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

@PersistenceCapable(table = "VULNERABILITY_POLICY")
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class VulnerabilityPolicy implements Serializable {

    @PrimaryKey
    @Persistent(valueStrategy = IdGeneratorStrategy.NATIVE)
    @JsonIgnore
    private long id;

    @Persistent
    @Column(name = "NAME", allowsNull = "false")
    @Index(name = "VULNERABILITY_POLICY_NAME_IDX", unique = "true")
    @NotBlank
    @Size(min = 1, max = 255)
    @Pattern(regexp = RegexSequence.Definition.PRINTABLE_CHARS, message = "The name may only contain printable characters")
    private String name;

    @Persistent
    @Column(name = "DESCRIPTION", allowsNull = "true")
    @Size(max = 4096)
    @Pattern(regexp = RegexSequence.Definition.PRINTABLE_CHARS, message = "The description may only contain printable characters")
    private String description;

    @Persistent
    @Column(name = "AUTHOR", allowsNull = "true", jdbcType = "VARCHAR")
    @Pattern(regexp = RegexSequence.Definition.PRINTABLE_CHARS, message = "The author may only contain printable characters")
    private String author;

    @Persistent
    @Column(name = "CREATED", allowsNull = "true")
    private Date created;

    @Persistent
    @Column(name = "UPDATED", allowsNull = "true")
    private Date updated;

    @Persistent
    @Column(name = "VALID_FROM", allowsNull = "true")
    private Date validFrom;

    @Persistent
    @Column(name = "VALID_UNTIL", allowsNull = "true")
    private Date validUntil;

    @Persistent(defaultFetchGroup = "true")
    @Column(name = "CONDITIONS", allowsNull = "false")
    private String[] conditions;

    @Column(name = "ANALYSIS", allowsNull = "false")
    @Persistent(defaultFetchGroup = "true")
    private VulnerabilityPolicyAnalysis analysis;

    @Column(name = "RATINGS", allowsNull = "true")
    @Persistent(defaultFetchGroup = "true")
    private List<VulnerabilityPolicyRating> ratings;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public Date getCreated() {
        return created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    public Date getUpdated() {
        return updated;
    }

    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    public Date getValidFrom() {
        return validFrom;
    }

    public void setValidFrom(Date validFrom) {
        this.validFrom = validFrom;
    }

    public Date getValidUntil() {
        return validUntil;
    }

    public void setValidUntil(Date validUntil) {
        this.validUntil = validUntil;
    }

    public String[] getConditions() {
        return conditions;
    }

    public void setConditions(String[] conditions) {
        this.conditions = conditions;
    }

    public VulnerabilityPolicyAnalysis getAnalysis() {
        return analysis;
    }

    public void setAnalysis(VulnerabilityPolicyAnalysis vulnerabilityPolicyAnalysis) {
        this.analysis = vulnerabilityPolicyAnalysis;
    }

    public List<VulnerabilityPolicyRating> getRatings() {
        return ratings;
    }

    public void setRatings(List<VulnerabilityPolicyRating> ratings) {
        this.ratings = ratings;
    }
}

