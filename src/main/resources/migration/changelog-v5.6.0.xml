<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
        objectQuotingStrategy="QUOTE_ALL_OBJECTS"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
            http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <changeSet id="v5.6.0-1" author="sahibamittal">
        <modifyDataType tableName="AFFECTEDVERSIONATTRIBUTION" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="BOM" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="COMPONENT" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="COMPONENT_PROPERTY" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="FINDINGATTRIBUTION" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="LICENSE" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="LICENSEGROUP" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="NOTIFICATIONPUBLISHER" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="NOTIFICATIONRULE" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="POLICY" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="POLICYCONDITION" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="POLICYVIOLATION" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="PROJECT" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="REPOSITORY" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="SERVICECOMPONENT" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="VEX" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="VULNERABILITY" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="VULNERABILITYALIAS" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="VULNERABILITYSCAN" columnName="TARGET_IDENTIFIER" newDataType="UUID"/>
        <modifyDataType tableName="VULNERABILITYSCAN" columnName="TOKEN" newDataType="UUID"/>
        <modifyDataType tableName="VULNERABLESOFTWARE" columnName="UUID" newDataType="UUID"/>
        <modifyDataType tableName="WORKFLOW_STATE" columnName="TOKEN" newDataType="UUID"/>
    </changeSet>

    <changeSet id="v5.6.0-2" author="nscuro">
        <modifyDataType tableName="TEAM" columnName="NAME" newDataType="VARCHAR(255)"/>
    </changeSet>
  
    <changeSet id="v5.6.0-3" author="rossmurphy974@gmail.com">
        <addColumn tableName="PROJECT">
            <column name="AUTHORS" type="TEXT"/>
        </addColumn>
        <addColumn tableName="COMPONENT">
            <column name="AUTHORS" type="TEXT"/>
        </addColumn>
        
        <sql>
            UPDATE "PROJECT"
            SET "AUTHORS" = JSON_BUILD_ARRAY(JSON_BUILD_OBJECT('name', "AUTHOR"))::TEXT
            WHERE "AUTHOR" IS NOT NULL;
        </sql>
        <sql>
            UPDATE "COMPONENT"
            SET "AUTHORS" = JSON_BUILD_ARRAY(JSON_BUILD_OBJECT('name', "AUTHOR"))::TEXT
            WHERE "AUTHOR" IS NOT NULL;
        </sql>

        <dropColumn tableName="PROJECT">
            <column name="AUTHOR"/>
        </dropColumn>
        <dropColumn tableName="COMPONENT">
            <column name="AUTHOR"/>
        </dropColumn>
    </changeSet>
    
    <changeSet id="v5.6.0-4" author="nscuro">
        <dropIndex tableName="COMPONENT" indexName="COMPONENT_DIRECT_DEPENDENCIES_GIN_IDX"/>
        <modifyDataType tableName="COMPONENT" columnName="DIRECT_DEPENDENCIES" newDataType="JSONB"/>
        <modifyDataType tableName="PROJECT" columnName="DIRECT_DEPENDENCIES" newDataType="JSONB"/>
        <sql splitStatements="true">
            CREATE
             INDEX "COMPONENT_DIRECT_DEPENDENCIES_JSONB_IDX"
                ON "COMPONENT"
             USING GIN("DIRECT_DEPENDENCIES" JSONB_PATH_OPS);
        </sql>
    </changeSet>

    <changeSet id="v5.6.0-5" author="sahibamittal">
        <sql>
            DELETE FROM "CONFIGPROPERTY"
            WHERE "GROUPNAME" = 'artifact'
            AND "PROPERTYNAME" = 'bom.validation.enabled';
        </sql>
    </changeSet>

    <changeSet id="v5.6.0-6" author="sahibamittal">
        <createTable tableName="NOTIFICATIONRULE_TAGS">
            <column name="NOTIFICATIONRULE_ID" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="TAG_ID" type="BIGINT"/>
        </createTable>

        <createIndex indexName="NOTIFICATIONRULE_TAGS_NOTIFICATIONRULE_ID_IDX" tableName="NOTIFICATIONRULE_TAGS">
            <column name="NOTIFICATIONRULE_ID"/>
        </createIndex>
        <createIndex indexName="NOTIFICATIONRULE_TAGS_TAG_ID_IDX" tableName="NOTIFICATIONRULE_TAGS">
            <column name="TAG_ID"/>
        </createIndex>

        <addForeignKeyConstraint baseColumnNames="NOTIFICATIONRULE_ID" baseTableName="NOTIFICATIONRULE_TAGS"
                                 constraintName="NOTIFICATIONRULE_TAGS_NOTIFICATIONRULE_FK" deferrable="true" initiallyDeferred="true"
                                 onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="ID"
                                 referencedTableName="NOTIFICATIONRULE" validate="true"/>

        <addForeignKeyConstraint baseColumnNames="TAG_ID" baseTableName="NOTIFICATIONRULE_TAGS"
                                 constraintName="NOTIFICATIONRULE_TAGS_TAG_FK" deferrable="true" initiallyDeferred="true"
                                 onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="ID"
                                 referencedTableName="TAG" validate="true"/>
    </changeSet>

    <changeSet id="v5.6.0-7" author="sahibamittal">
        <addColumn tableName="PROJECT">
            <column name="IS_LATEST" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="POLICY">
            <column name="ONLY_LATEST_PROJECT_VERSION" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <createIndex indexName="PROJECT_IS_LATEST_IDX" tableName="PROJECT">
            <column name="IS_LATEST"/>
        </createIndex>
    </changeSet>
    
    <changeSet id="v5.6.0-8" author="nscuro">
        <sql splitStatements="true">
            DELETE
              FROM "CONFIGPROPERTY"
             WHERE "GROUPNAME" = 'vuln-source'
               AND "PROPERTYNAME" = 'nvd.feeds.url';
        </sql>
    </changeSet>

    <changeSet id="v5.6.0-9" author="nscuro">
        <sql>
            CREATE INDEX "COMPONENT_PROPERTY_COMPONENT_ID_IDX"
                ON "COMPONENT_PROPERTY" ("COMPONENT_ID");
        </sql>
    </changeSet>

    <changeSet id="v5.6.0-10" author="nscuro">
        <sql>
            CREATE TYPE WORKFLOW_RUN_STATUS AS ENUM (
              'PENDING'
            , 'RUNNING'
            , 'SUSPENDED'
            , 'CANCELLED'
            , 'COMPLETED'
            , 'FAILED'
            );

            CREATE TABLE "WORKFLOW_RUN" (
              "ID" UUID
            , "PARENT_ID" UUID
            , "WORKFLOW_NAME" TEXT NOT NULL
            , "WORKFLOW_VERSION" SMALLINT NOT NULL
            , "STATUS" WORKFLOW_RUN_STATUS NOT NULL DEFAULT 'PENDING'
            , "CUSTOM_STATUS" TEXT
            , "PRIORITY" SMALLINT
            , "LOCKED_BY" TEXT
            , "LOCKED_UNTIL" TIMESTAMPTZ(3)
            , "CREATED_AT" TIMESTAMPTZ(3) NOT NULL DEFAULT NOW()
            , "UPDATED_AT" TIMESTAMPTZ(3)
            , "COMPLETED_AT" TIMESTAMPTZ(3)
            , CONSTRAINT "WORKFLOW_RUN_PK" PRIMARY KEY ("ID")
            , CONSTRAINT "WORKFLOW_RUN_PARENT_FK" FOREIGN KEY ("PARENT_ID") REFERENCES "WORKFLOW_RUN" ("ID") ON DELETE CASCADE
            );

            <!--
              NB: This table could be partitioned by WORKFLOW_RUN_ID since it's never queried without that ID.
              It's mostly append-only and doesn't accumulate lots of bloat, unless records are deleted (i.e. as part of workflow run retention).
            -->
            CREATE TABLE "WORKFLOW_EVENT_LOG" (
              "WORKFLOW_RUN_ID" UUID
            , "SEQUENCE_NUMBER" INT
            , "EVENT" BYTEA NOT NULL
            , CONSTRAINT "WORKFLOW_EVENT_LOG_PK" PRIMARY KEY ("WORKFLOW_RUN_ID", "SEQUENCE_NUMBER")
            , CONSTRAINT "WORKFLOW_EVENT_LOG_WORKFLOW_RUN_FK" FOREIGN KEY ("WORKFLOW_RUN_ID") REFERENCES "WORKFLOW_RUN" ("ID") ON DELETE CASCADE
            );

            <!--
              NB: This table could be partitioned by WORKFLOW_RUN_ID since it's never queried without that ID.
              It will usually hold ~1 record per active workflow run and thus will not get that huge.
              But since records are deleted frequently, it might accumulate quite a bit of bloat.
              Partitioning might help with that, but this remains to be verified.
            -->
            CREATE TABLE "WORKFLOW_EVENT_INBOX" (
              "ID" BIGINT GENERATED ALWAYS AS IDENTITY
            , "WORKFLOW_RUN_ID" UUID NOT NULL
            , "VISIBLE_FROM" TIMESTAMPTZ(3)
            , "LOCKED_BY" TEXT
            , "DEQUEUE_COUNT" SMALLINT
            , "EVENT" BYTEA NOT NULL
            , CONSTRAINT "WORKFLOW_EVENT_INBOX_PK" PRIMARY KEY ("ID")
            , CONSTRAINT "WORKFLOW_EVENT_INBOX_WORKFLOW_RUN_FK" FOREIGN KEY ("WORKFLOW_RUN_ID") REFERENCES "WORKFLOW_RUN" ("ID") ON DELETE CASCADE
            );

            CREATE TABLE "WORKFLOW_ACTIVITY_TASK" (
              "WORKFLOW_RUN_ID" UUID
            , "SCHEDULED_EVENT_ID" INT
            , "ACTIVITY_NAME" TEXT NOT NULL
            , "PRIORITY" SMALLINT
            , "ARGUMENT" BYTEA
            , "VISIBLE_FROM" TIMESTAMPTZ(3)
            , "LOCKED_BY" TEXT
            , "LOCKED_UNTIL" TIMESTAMPTZ(3)
            , "CREATED_AT" TIMESTAMPTZ(3) NOT NULL DEFAULT NOW()
            , "UPDATED_AT" TIMESTAMPTZ(3)
            , CONSTRAINT "WORKFLOW_ACTIVITY_TASK_PK" PRIMARY KEY ("WORKFLOW_RUN_ID", "SCHEDULED_EVENT_ID")
            , CONSTRAINT "WORKFLOW_ACTIVITY_TASK_WORKFLOW_RUN_FK" FOREIGN KEY ("WORKFLOW_RUN_ID") REFERENCES "WORKFLOW_RUN" ("ID") ON DELETE CASCADE
            );

            CREATE INDEX "WORKFLOW_RUN_POLL_IDX"
                ON "WORKFLOW_RUN" (
                     "PRIORITY" DESC NULLS LAST
                   , "CREATED_AT"
                   , "WORKFLOW_NAME"
                   , "LOCKED_UNTIL")
            INCLUDE ("ID")
              WHERE "STATUS" = ANY('{PENDING, RUNNING, SUSPENDED}'::WORKFLOW_RUN_STATUS[]);

            CREATE INDEX "WORKFLOW_EVENT_INBOX_POLL_IDX"
                ON "WORKFLOW_EVENT_INBOX" ("WORKFLOW_RUN_ID", "VISIBLE_FROM");

            <!-- TODO: Verify if all these columns are indeed needed for an index-only scan. -->
            CREATE INDEX "WORKFLOW_ACTIVITY_TASK_POLL_IDX"
                ON "WORKFLOW_ACTIVITY_TASK" (
                     "PRIORITY" DESC NULLS LAST
                   , "CREATED_AT"
                   , "ACTIVITY_NAME"
                   , "LOCKED_UNTIL"
                   , "VISIBLE_FROM")
            INCLUDE ("WORKFLOW_RUN_ID", "SCHEDULED_EVENT_ID");

            ALTER TABLE "WORKFLOW_RUN" SET (AUTOVACUUM_VACUUM_SCALE_FACTOR = 0.02);
            ALTER TABLE "WORKFLOW_EVENT_INBOX" SET (AUTOVACUUM_VACUUM_SCALE_FACTOR = 0.02);
            ALTER TABLE "WORKFLOW_ACTIVITY_TASK" SET (AUTOVACUUM_VACUUM_SCALE_FACTOR = 0.02);
        </sql>
    </changeSet>
</databaseChangeLog>