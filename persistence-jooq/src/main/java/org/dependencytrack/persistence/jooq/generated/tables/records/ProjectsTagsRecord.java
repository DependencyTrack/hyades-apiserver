/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.ProjectsTags;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProjectsTagsRecord extends UpdatableRecordImpl<ProjectsTagsRecord> {

    private static final long serialVersionUID = -1759842764;

    /**
     * Setter for <code>PROJECTS_TAGS.TAG_ID</code>.
     */
    public ProjectsTagsRecord setTagId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PROJECTS_TAGS.TAG_ID</code>.
     */
    public Long getTagId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PROJECTS_TAGS.PROJECT_ID</code>.
     */
    public ProjectsTagsRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PROJECTS_TAGS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectsTagsRecord
     */
    public ProjectsTagsRecord() {
        super(ProjectsTags.PROJECTS_TAGS);
    }

    /**
     * Create a detached, initialised ProjectsTagsRecord
     */
    public ProjectsTagsRecord(Long tagId, Long projectId) {
        super(ProjectsTags.PROJECTS_TAGS);

        setTagId(tagId);
        setProjectId(projectId);
        resetTouchedOnNotNull();
    }
}
