/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.ViolationAnalysis;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViolationAnalysisRecord extends UpdatableRecordImpl<ViolationAnalysisRecord> {

    private static final long serialVersionUID = 195262434;

    /**
     * Setter for <code>VIOLATIONANALYSIS.ID</code>.
     */
    public ViolationAnalysisRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>VIOLATIONANALYSIS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>VIOLATIONANALYSIS.STATE</code>.
     */
    public ViolationAnalysisRecord setState(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>VIOLATIONANALYSIS.STATE</code>.
     */
    public String getState() {
        return (String) get(1);
    }

    /**
     * Setter for <code>VIOLATIONANALYSIS.COMPONENT_ID</code>.
     */
    public ViolationAnalysisRecord setComponentId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>VIOLATIONANALYSIS.COMPONENT_ID</code>.
     */
    public Long getComponentId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>VIOLATIONANALYSIS.POLICYVIOLATION_ID</code>.
     */
    public ViolationAnalysisRecord setPolicyviolationId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>VIOLATIONANALYSIS.POLICYVIOLATION_ID</code>.
     */
    public Long getPolicyviolationId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>VIOLATIONANALYSIS.PROJECT_ID</code>.
     */
    public ViolationAnalysisRecord setProjectId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>VIOLATIONANALYSIS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>VIOLATIONANALYSIS.SUPPRESSED</code>.
     */
    public ViolationAnalysisRecord setSuppressed(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>VIOLATIONANALYSIS.SUPPRESSED</code>.
     */
    public Boolean getSuppressed() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViolationAnalysisRecord
     */
    public ViolationAnalysisRecord() {
        super(ViolationAnalysis.VIOLATIONANALYSIS);
    }

    /**
     * Create a detached, initialised ViolationAnalysisRecord
     */
    public ViolationAnalysisRecord(Long id, String state, Long componentId, Long policyviolationId, Long projectId, Boolean suppressed) {
        super(ViolationAnalysis.VIOLATIONANALYSIS);

        setId(id);
        setState(state);
        setComponentId(componentId);
        setPolicyviolationId(policyviolationId);
        setProjectId(projectId);
        setSuppressed(suppressed);
        resetTouchedOnNotNull();
    }
}
