/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.PortfolioMetrics;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PortfolioMetricsRecord extends UpdatableRecordImpl<PortfolioMetricsRecord> {

    private static final long serialVersionUID = 133730690;

    /**
     * Setter for <code>PORTFOLIOMETRICS.COMPONENTS</code>.
     */
    public PortfolioMetricsRecord setComponents(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.COMPONENTS</code>.
     */
    public Integer getComponents() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.CRITICAL</code>.
     */
    public PortfolioMetricsRecord setCritical(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.CRITICAL</code>.
     */
    public Integer getCritical() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.FINDINGS_AUDITED</code>.
     */
    public PortfolioMetricsRecord setFindingsAudited(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.FINDINGS_AUDITED</code>.
     */
    public Integer getFindingsAudited() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.FINDINGS_TOTAL</code>.
     */
    public PortfolioMetricsRecord setFindingsTotal(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.FINDINGS_TOTAL</code>.
     */
    public Integer getFindingsTotal() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.FINDINGS_UNAUDITED</code>.
     */
    public PortfolioMetricsRecord setFindingsUnaudited(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.FINDINGS_UNAUDITED</code>.
     */
    public Integer getFindingsUnaudited() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.FIRST_OCCURRENCE</code>.
     */
    public PortfolioMetricsRecord setFirstOccurrence(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.FIRST_OCCURRENCE</code>.
     */
    public OffsetDateTime getFirstOccurrence() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.HIGH</code>.
     */
    public PortfolioMetricsRecord setHigh(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.HIGH</code>.
     */
    public Integer getHigh() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.RISKSCORE</code>.
     */
    public PortfolioMetricsRecord setRiskscore(Double value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.RISKSCORE</code>.
     */
    public Double getRiskscore() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.LAST_OCCURRENCE</code>.
     */
    public PortfolioMetricsRecord setLastOccurrence(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.LAST_OCCURRENCE</code>.
     */
    public OffsetDateTime getLastOccurrence() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.LOW</code>.
     */
    public PortfolioMetricsRecord setLow(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.LOW</code>.
     */
    public Integer getLow() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.MEDIUM</code>.
     */
    public PortfolioMetricsRecord setMedium(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.MEDIUM</code>.
     */
    public Integer getMedium() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_AUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsAudited(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_AUDITED</code>.
     */
    public Integer getPolicyviolationsAudited() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_FAIL</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsFail(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_FAIL</code>.
     */
    public Integer getPolicyviolationsFail() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_INFO</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsInfo(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_INFO</code>.
     */
    public Integer getPolicyviolationsInfo() {
        return (Integer) get(13);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_LICENSE_AUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsLicenseAudited(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_LICENSE_AUDITED</code>.
     */
    public Integer getPolicyviolationsLicenseAudited() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_LICENSE_TOTAL</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsLicenseTotal(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_LICENSE_TOTAL</code>.
     */
    public Integer getPolicyviolationsLicenseTotal() {
        return (Integer) get(15);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_LICENSE_UNAUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsLicenseUnaudited(Integer value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_LICENSE_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsLicenseUnaudited() {
        return (Integer) get(16);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_OPERATIONAL_AUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsOperationalAudited(Integer value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_OPERATIONAL_AUDITED</code>.
     */
    public Integer getPolicyviolationsOperationalAudited() {
        return (Integer) get(17);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_OPERATIONAL_TOTAL</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsOperationalTotal(Integer value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_OPERATIONAL_TOTAL</code>.
     */
    public Integer getPolicyviolationsOperationalTotal() {
        return (Integer) get(18);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_OPERATIONAL_UNAUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsOperationalUnaudited(Integer value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_OPERATIONAL_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsOperationalUnaudited() {
        return (Integer) get(19);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_SECURITY_AUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsSecurityAudited(Integer value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_SECURITY_AUDITED</code>.
     */
    public Integer getPolicyviolationsSecurityAudited() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_SECURITY_TOTAL</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsSecurityTotal(Integer value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_SECURITY_TOTAL</code>.
     */
    public Integer getPolicyviolationsSecurityTotal() {
        return (Integer) get(21);
    }

    /**
     * Setter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_SECURITY_UNAUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsSecurityUnaudited(Integer value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_SECURITY_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsSecurityUnaudited() {
        return (Integer) get(22);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_TOTAL</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsTotal(Integer value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_TOTAL</code>.
     */
    public Integer getPolicyviolationsTotal() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_UNAUDITED</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsUnaudited(Integer value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsUnaudited() {
        return (Integer) get(24);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_WARN</code>.
     */
    public PortfolioMetricsRecord setPolicyviolationsWarn(Integer value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.POLICYVIOLATIONS_WARN</code>.
     */
    public Integer getPolicyviolationsWarn() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.PROJECTS</code>.
     */
    public PortfolioMetricsRecord setProjects(Integer value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.PROJECTS</code>.
     */
    public Integer getProjects() {
        return (Integer) get(26);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.SUPPRESSED</code>.
     */
    public PortfolioMetricsRecord setSuppressed(Integer value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.SUPPRESSED</code>.
     */
    public Integer getSuppressed() {
        return (Integer) get(27);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.UNASSIGNED_SEVERITY</code>.
     */
    public PortfolioMetricsRecord setUnassignedSeverity(Integer value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.UNASSIGNED_SEVERITY</code>.
     */
    public Integer getUnassignedSeverity() {
        return (Integer) get(28);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.VULNERABILITIES</code>.
     */
    public PortfolioMetricsRecord setVulnerabilities(Integer value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.VULNERABILITIES</code>.
     */
    public Integer getVulnerabilities() {
        return (Integer) get(29);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.VULNERABLECOMPONENTS</code>.
     */
    public PortfolioMetricsRecord setVulnerablecomponents(Integer value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.VULNERABLECOMPONENTS</code>.
     */
    public Integer getVulnerablecomponents() {
        return (Integer) get(30);
    }

    /**
     * Setter for <code>PORTFOLIOMETRICS.VULNERABLEPROJECTS</code>.
     */
    public PortfolioMetricsRecord setVulnerableprojects(Integer value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>PORTFOLIOMETRICS.VULNERABLEPROJECTS</code>.
     */
    public Integer getVulnerableprojects() {
        return (Integer) get(31);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<OffsetDateTime> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PortfolioMetricsRecord
     */
    public PortfolioMetricsRecord() {
        super(PortfolioMetrics.PORTFOLIOMETRICS);
    }

    /**
     * Create a detached, initialised PortfolioMetricsRecord
     */
    public PortfolioMetricsRecord(Integer components, Integer critical, Integer findingsAudited, Integer findingsTotal, Integer findingsUnaudited, OffsetDateTime firstOccurrence, Integer high, Double riskscore, OffsetDateTime lastOccurrence, Integer low, Integer medium, Integer policyviolationsAudited, Integer policyviolationsFail, Integer policyviolationsInfo, Integer policyviolationsLicenseAudited, Integer policyviolationsLicenseTotal, Integer policyviolationsLicenseUnaudited, Integer policyviolationsOperationalAudited, Integer policyviolationsOperationalTotal, Integer policyviolationsOperationalUnaudited, Integer policyviolationsSecurityAudited, Integer policyviolationsSecurityTotal, Integer policyviolationsSecurityUnaudited, Integer policyviolationsTotal, Integer policyviolationsUnaudited, Integer policyviolationsWarn, Integer projects, Integer suppressed, Integer unassignedSeverity, Integer vulnerabilities, Integer vulnerablecomponents, Integer vulnerableprojects) {
        super(PortfolioMetrics.PORTFOLIOMETRICS);

        setComponents(components);
        setCritical(critical);
        setFindingsAudited(findingsAudited);
        setFindingsTotal(findingsTotal);
        setFindingsUnaudited(findingsUnaudited);
        setFirstOccurrence(firstOccurrence);
        setHigh(high);
        setRiskscore(riskscore);
        setLastOccurrence(lastOccurrence);
        setLow(low);
        setMedium(medium);
        setPolicyviolationsAudited(policyviolationsAudited);
        setPolicyviolationsFail(policyviolationsFail);
        setPolicyviolationsInfo(policyviolationsInfo);
        setPolicyviolationsLicenseAudited(policyviolationsLicenseAudited);
        setPolicyviolationsLicenseTotal(policyviolationsLicenseTotal);
        setPolicyviolationsLicenseUnaudited(policyviolationsLicenseUnaudited);
        setPolicyviolationsOperationalAudited(policyviolationsOperationalAudited);
        setPolicyviolationsOperationalTotal(policyviolationsOperationalTotal);
        setPolicyviolationsOperationalUnaudited(policyviolationsOperationalUnaudited);
        setPolicyviolationsSecurityAudited(policyviolationsSecurityAudited);
        setPolicyviolationsSecurityTotal(policyviolationsSecurityTotal);
        setPolicyviolationsSecurityUnaudited(policyviolationsSecurityUnaudited);
        setPolicyviolationsTotal(policyviolationsTotal);
        setPolicyviolationsUnaudited(policyviolationsUnaudited);
        setPolicyviolationsWarn(policyviolationsWarn);
        setProjects(projects);
        setSuppressed(suppressed);
        setUnassignedSeverity(unassignedSeverity);
        setVulnerabilities(vulnerabilities);
        setVulnerablecomponents(vulnerablecomponents);
        setVulnerableprojects(vulnerableprojects);
        resetTouchedOnNotNull();
    }
}
