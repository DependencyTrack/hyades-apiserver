/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import org.dependencytrack.persistence.jooq.generated.tables.Dependencymetrics;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DependencymetricsRecord extends UpdatableRecordImpl<DependencymetricsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.COMPONENT_ID</code>.
     */
    public void setComponentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.COMPONENT_ID</code>.
     */
    public Long getComponentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.CRITICAL</code>.
     */
    public void setCritical(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.CRITICAL</code>.
     */
    public Integer getCritical() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.FINDINGS_AUDITED</code>.
     */
    public void setFindingsAudited(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.FINDINGS_AUDITED</code>.
     */
    public Integer getFindingsAudited() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.FINDINGS_TOTAL</code>.
     */
    public void setFindingsTotal(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.FINDINGS_TOTAL</code>.
     */
    public Integer getFindingsTotal() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.FINDINGS_UNAUDITED</code>.
     */
    public void setFindingsUnaudited(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.FINDINGS_UNAUDITED</code>.
     */
    public Integer getFindingsUnaudited() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.FIRST_OCCURRENCE</code>.
     */
    public void setFirstOccurrence(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.FIRST_OCCURRENCE</code>.
     */
    public OffsetDateTime getFirstOccurrence() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.HIGH</code>.
     */
    public void setHigh(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.HIGH</code>.
     */
    public Integer getHigh() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.RISKSCORE</code>.
     */
    public void setRiskscore(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.RISKSCORE</code>.
     */
    public Double getRiskscore() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.LAST_OCCURRENCE</code>.
     */
    public void setLastOccurrence(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.LAST_OCCURRENCE</code>.
     */
    public OffsetDateTime getLastOccurrence() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.LOW</code>.
     */
    public void setLow(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.LOW</code>.
     */
    public Integer getLow() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.MEDIUM</code>.
     */
    public void setMedium(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.MEDIUM</code>.
     */
    public Integer getMedium() {
        return (Integer) get(11);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_AUDITED</code>.
     */
    public void setPolicyviolationsAudited(Integer value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_AUDITED</code>.
     */
    public Integer getPolicyviolationsAudited() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_FAIL</code>.
     */
    public void setPolicyviolationsFail(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_FAIL</code>.
     */
    public Integer getPolicyviolationsFail() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_INFO</code>.
     */
    public void setPolicyviolationsInfo(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_INFO</code>.
     */
    public Integer getPolicyviolationsInfo() {
        return (Integer) get(14);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_LICENSE_AUDITED</code>.
     */
    public void setPolicyviolationsLicenseAudited(Integer value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_LICENSE_AUDITED</code>.
     */
    public Integer getPolicyviolationsLicenseAudited() {
        return (Integer) get(15);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_LICENSE_TOTAL</code>.
     */
    public void setPolicyviolationsLicenseTotal(Integer value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_LICENSE_TOTAL</code>.
     */
    public Integer getPolicyviolationsLicenseTotal() {
        return (Integer) get(16);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_LICENSE_UNAUDITED</code>.
     */
    public void setPolicyviolationsLicenseUnaudited(Integer value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_LICENSE_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsLicenseUnaudited() {
        return (Integer) get(17);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_OPERATIONAL_AUDITED</code>.
     */
    public void setPolicyviolationsOperationalAudited(Integer value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_OPERATIONAL_AUDITED</code>.
     */
    public Integer getPolicyviolationsOperationalAudited() {
        return (Integer) get(18);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_OPERATIONAL_TOTAL</code>.
     */
    public void setPolicyviolationsOperationalTotal(Integer value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_OPERATIONAL_TOTAL</code>.
     */
    public Integer getPolicyviolationsOperationalTotal() {
        return (Integer) get(19);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_OPERATIONAL_UNAUDITED</code>.
     */
    public void setPolicyviolationsOperationalUnaudited(Integer value) {
        set(20, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_OPERATIONAL_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsOperationalUnaudited() {
        return (Integer) get(20);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_SECURITY_AUDITED</code>.
     */
    public void setPolicyviolationsSecurityAudited(Integer value) {
        set(21, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_SECURITY_AUDITED</code>.
     */
    public Integer getPolicyviolationsSecurityAudited() {
        return (Integer) get(21);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_SECURITY_TOTAL</code>.
     */
    public void setPolicyviolationsSecurityTotal(Integer value) {
        set(22, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_SECURITY_TOTAL</code>.
     */
    public Integer getPolicyviolationsSecurityTotal() {
        return (Integer) get(22);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_SECURITY_UNAUDITED</code>.
     */
    public void setPolicyviolationsSecurityUnaudited(Integer value) {
        set(23, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_SECURITY_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsSecurityUnaudited() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_TOTAL</code>.
     */
    public void setPolicyviolationsTotal(Integer value) {
        set(24, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_TOTAL</code>.
     */
    public Integer getPolicyviolationsTotal() {
        return (Integer) get(24);
    }

    /**
     * Setter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_UNAUDITED</code>.
     */
    public void setPolicyviolationsUnaudited(Integer value) {
        set(25, value);
    }

    /**
     * Getter for
     * <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_UNAUDITED</code>.
     */
    public Integer getPolicyviolationsUnaudited() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_WARN</code>.
     */
    public void setPolicyviolationsWarn(Integer value) {
        set(26, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.POLICYVIOLATIONS_WARN</code>.
     */
    public Integer getPolicyviolationsWarn() {
        return (Integer) get(26);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.PROJECT_ID</code>.
     */
    public void setProjectId(Long value) {
        set(27, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(27);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.SUPPRESSED</code>.
     */
    public void setSuppressed(Integer value) {
        set(28, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.SUPPRESSED</code>.
     */
    public Integer getSuppressed() {
        return (Integer) get(28);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.UNASSIGNED_SEVERITY</code>.
     */
    public void setUnassignedSeverity(Integer value) {
        set(29, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.UNASSIGNED_SEVERITY</code>.
     */
    public Integer getUnassignedSeverity() {
        return (Integer) get(29);
    }

    /**
     * Setter for <code>public.DEPENDENCYMETRICS.VULNERABILITIES</code>.
     */
    public void setVulnerabilities(Integer value) {
        set(30, value);
    }

    /**
     * Getter for <code>public.DEPENDENCYMETRICS.VULNERABILITIES</code>.
     */
    public Integer getVulnerabilities() {
        return (Integer) get(30);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DependencymetricsRecord
     */
    public DependencymetricsRecord() {
        super(Dependencymetrics.DEPENDENCYMETRICS);
    }

    /**
     * Create a detached, initialised DependencymetricsRecord
     */
    public DependencymetricsRecord(Long id, Long componentId, Integer critical, Integer findingsAudited, Integer findingsTotal, Integer findingsUnaudited, OffsetDateTime firstOccurrence, Integer high, Double riskscore, OffsetDateTime lastOccurrence, Integer low, Integer medium, Integer policyviolationsAudited, Integer policyviolationsFail, Integer policyviolationsInfo, Integer policyviolationsLicenseAudited, Integer policyviolationsLicenseTotal, Integer policyviolationsLicenseUnaudited, Integer policyviolationsOperationalAudited, Integer policyviolationsOperationalTotal, Integer policyviolationsOperationalUnaudited, Integer policyviolationsSecurityAudited, Integer policyviolationsSecurityTotal, Integer policyviolationsSecurityUnaudited, Integer policyviolationsTotal, Integer policyviolationsUnaudited, Integer policyviolationsWarn, Long projectId, Integer suppressed, Integer unassignedSeverity, Integer vulnerabilities) {
        super(Dependencymetrics.DEPENDENCYMETRICS);

        setId(id);
        setComponentId(componentId);
        setCritical(critical);
        setFindingsAudited(findingsAudited);
        setFindingsTotal(findingsTotal);
        setFindingsUnaudited(findingsUnaudited);
        setFirstOccurrence(firstOccurrence);
        setHigh(high);
        setRiskscore(riskscore);
        setLastOccurrence(lastOccurrence);
        setLow(low);
        setMedium(medium);
        setPolicyviolationsAudited(policyviolationsAudited);
        setPolicyviolationsFail(policyviolationsFail);
        setPolicyviolationsInfo(policyviolationsInfo);
        setPolicyviolationsLicenseAudited(policyviolationsLicenseAudited);
        setPolicyviolationsLicenseTotal(policyviolationsLicenseTotal);
        setPolicyviolationsLicenseUnaudited(policyviolationsLicenseUnaudited);
        setPolicyviolationsOperationalAudited(policyviolationsOperationalAudited);
        setPolicyviolationsOperationalTotal(policyviolationsOperationalTotal);
        setPolicyviolationsOperationalUnaudited(policyviolationsOperationalUnaudited);
        setPolicyviolationsSecurityAudited(policyviolationsSecurityAudited);
        setPolicyviolationsSecurityTotal(policyviolationsSecurityTotal);
        setPolicyviolationsSecurityUnaudited(policyviolationsSecurityUnaudited);
        setPolicyviolationsTotal(policyviolationsTotal);
        setPolicyviolationsUnaudited(policyviolationsUnaudited);
        setPolicyviolationsWarn(policyviolationsWarn);
        setProjectId(projectId);
        setSuppressed(suppressed);
        setUnassignedSeverity(unassignedSeverity);
        setVulnerabilities(vulnerabilities);
        resetTouchedOnNotNull();
    }
}
