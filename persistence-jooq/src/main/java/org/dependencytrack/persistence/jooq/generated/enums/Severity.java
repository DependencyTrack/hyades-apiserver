/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.enums;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.DefaultSchema;
import org.jooq.Catalog;
import org.jooq.EnumType;
import org.jooq.Schema;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public enum Severity implements EnumType {

    UNASSIGNED("UNASSIGNED"),

    INFO("INFO"),

    LOW("LOW"),

    MEDIUM("MEDIUM"),

    HIGH("HIGH"),

    CRITICAL("CRITICAL");

    private final String literal;

    private Severity(String literal) {
        this.literal = literal;
    }

    @Override
    public Catalog getCatalog() {
        return getSchema().getCatalog();
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public String getName() {
        return "severity";
    }

    @Override
    public String getLiteral() {
        return literal;
    }

    /**
     * Lookup a value of this EnumType by its literal. Returns
     * <code>null</code>, if no such value could be found, see {@link
     * EnumType#lookupLiteral(Class, String)}.
     */
    public static Severity lookupLiteral(String literal) {
        return EnumType.lookupLiteral(Severity.class, literal);
    }
}
