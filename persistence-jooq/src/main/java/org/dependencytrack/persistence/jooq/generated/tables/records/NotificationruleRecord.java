/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.util.UUID;

import org.dependencytrack.persistence.jooq.generated.tables.Notificationrule;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationruleRecord extends UpdatableRecordImpl<NotificationruleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.NOTIFICATIONRULE.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.ENABLED</code>.
     */
    public void setEnabled(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.ENABLED</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.MESSAGE</code>.
     */
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.MESSAGE</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.NAME</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.NAME</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.NOTIFICATION_LEVEL</code>.
     */
    public void setNotificationLevel(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.NOTIFICATION_LEVEL</code>.
     */
    public String getNotificationLevel() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.NOTIFY_CHILDREN</code>.
     */
    public void setNotifyChildren(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.NOTIFY_CHILDREN</code>.
     */
    public Boolean getNotifyChildren() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.NOTIFY_ON</code>.
     */
    public void setNotifyOn(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.NOTIFY_ON</code>.
     */
    public String getNotifyOn() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.PUBLISHER</code>.
     */
    public void setPublisher(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.PUBLISHER</code>.
     */
    public Long getPublisher() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.PUBLISHER_CONFIG</code>.
     */
    public void setPublisherConfig(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.PUBLISHER_CONFIG</code>.
     */
    public String getPublisherConfig() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.SCOPE</code>.
     */
    public void setScope(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.SCOPE</code>.
     */
    public String getScope() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.UUID</code>.
     */
    public void setUuid(UUID value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.UUID</code>.
     */
    public UUID getUuid() {
        return (UUID) get(10);
    }

    /**
     * Setter for <code>public.NOTIFICATIONRULE.LOG_SUCCESSFUL_PUBLISH</code>.
     */
    public void setLogSuccessfulPublish(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.NOTIFICATIONRULE.LOG_SUCCESSFUL_PUBLISH</code>.
     */
    public Boolean getLogSuccessfulPublish() {
        return (Boolean) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationruleRecord
     */
    public NotificationruleRecord() {
        super(Notificationrule.NOTIFICATIONRULE);
    }

    /**
     * Create a detached, initialised NotificationruleRecord
     */
    public NotificationruleRecord(Long id, Boolean enabled, String message, String name, String notificationLevel, Boolean notifyChildren, String notifyOn, Long publisher, String publisherConfig, String scope, UUID uuid, Boolean logSuccessfulPublish) {
        super(Notificationrule.NOTIFICATIONRULE);

        setId(id);
        setEnabled(enabled);
        setMessage(message);
        setName(name);
        setNotificationLevel(notificationLevel);
        setNotifyChildren(notifyChildren);
        setNotifyOn(notifyOn);
        setPublisher(publisher);
        setPublisherConfig(publisherConfig);
        setScope(scope);
        setUuid(uuid);
        setLogSuccessfulPublish(logSuccessfulPublish);
        resetTouchedOnNotNull();
    }
}
