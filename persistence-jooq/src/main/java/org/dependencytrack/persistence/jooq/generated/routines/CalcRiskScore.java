/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.routines;


import java.math.BigDecimal;

import org.dependencytrack.persistence.jooq.generated.Public;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CalcRiskScore extends AbstractRoutine<BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>public.CALC_RISK_SCORE.RETURN_VALUE</code>.
     */
    public static final Parameter<BigDecimal> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.NUMERIC, false, false);

    /**
     * The parameter <code>public.CALC_RISK_SCORE.critical</code>.
     */
    public static final Parameter<Integer> CRITICAL = Internal.createParameter("critical", SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.CALC_RISK_SCORE.high</code>.
     */
    public static final Parameter<Integer> HIGH = Internal.createParameter("high", SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.CALC_RISK_SCORE.medium</code>.
     */
    public static final Parameter<Integer> MEDIUM = Internal.createParameter("medium", SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.CALC_RISK_SCORE.low</code>.
     */
    public static final Parameter<Integer> LOW = Internal.createParameter("low", SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.CALC_RISK_SCORE.unassigned</code>.
     */
    public static final Parameter<Integer> UNASSIGNED = Internal.createParameter("unassigned", SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public CalcRiskScore() {
        super("CALC_RISK_SCORE", Public.PUBLIC, DSL.comment(""), SQLDataType.NUMERIC);

        setReturnParameter(RETURN_VALUE);
        addInParameter(CRITICAL);
        addInParameter(HIGH);
        addInParameter(MEDIUM);
        addInParameter(LOW);
        addInParameter(UNASSIGNED);
    }

    /**
     * Set the <code>critical</code> parameter IN value to the routine
     */
    public void setCritical(Integer value) {
        setValue(CRITICAL, value);
    }

    /**
     * Set the <code>critical</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setCritical(Field<Integer> field) {
        setField(CRITICAL, field);
    }

    /**
     * Set the <code>high</code> parameter IN value to the routine
     */
    public void setHigh(Integer value) {
        setValue(HIGH, value);
    }

    /**
     * Set the <code>high</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setHigh(Field<Integer> field) {
        setField(HIGH, field);
    }

    /**
     * Set the <code>medium</code> parameter IN value to the routine
     */
    public void setMedium(Integer value) {
        setValue(MEDIUM, value);
    }

    /**
     * Set the <code>medium</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setMedium(Field<Integer> field) {
        setField(MEDIUM, field);
    }

    /**
     * Set the <code>low</code> parameter IN value to the routine
     */
    public void setLow(Integer value) {
        setValue(LOW, value);
    }

    /**
     * Set the <code>low</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setLow(Field<Integer> field) {
        setField(LOW, field);
    }

    /**
     * Set the <code>unassigned</code> parameter IN value to the routine
     */
    public void setUnassigned(Integer value) {
        setValue(UNASSIGNED, value);
    }

    /**
     * Set the <code>unassigned</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setUnassigned(Field<Integer> field) {
        setField(UNASSIGNED, field);
    }
}
