/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.Project;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> {

    private static final long serialVersionUID = -1244388909;

    /**
     * Setter for <code>PROJECT.ID</code>.
     */
    public ProjectRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PROJECT.CLASSIFIER</code>.
     */
    public ProjectRecord setClassifier(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.CLASSIFIER</code>.
     */
    public String getClassifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PROJECT.CPE</code>.
     */
    public ProjectRecord setCpe(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.CPE</code>.
     */
    public String getCpe() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PROJECT.DESCRIPTION</code>.
     */
    public ProjectRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PROJECT.DIRECT_DEPENDENCIES</code>.
     */
    public ProjectRecord setDirectDependencies(JSONB value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.DIRECT_DEPENDENCIES</code>.
     */
    public JSONB getDirectDependencies() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>PROJECT.EXTERNAL_REFERENCES</code>.
     */
    public ProjectRecord setExternalReferences(byte[] value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.EXTERNAL_REFERENCES</code>.
     */
    public byte[] getExternalReferences() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>PROJECT.GROUP</code>.
     */
    public ProjectRecord setGroup(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.GROUP</code>.
     */
    public String getGroup() {
        return (String) get(6);
    }

    /**
     * Setter for <code>PROJECT.LAST_BOM_IMPORTED</code>.
     */
    public ProjectRecord setLastBomImported(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.LAST_BOM_IMPORTED</code>.
     */
    public OffsetDateTime getLastBomImported() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>PROJECT.LAST_BOM_IMPORTED_FORMAT</code>.
     */
    public ProjectRecord setLastBomImportedFormat(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.LAST_BOM_IMPORTED_FORMAT</code>.
     */
    public String getLastBomImportedFormat() {
        return (String) get(8);
    }

    /**
     * Setter for <code>PROJECT.LAST_RISKSCORE</code>.
     */
    public ProjectRecord setLastRiskscore(Double value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.LAST_RISKSCORE</code>.
     */
    public Double getLastRiskscore() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>PROJECT.NAME</code>.
     */
    public ProjectRecord setName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.NAME</code>.
     */
    public String getName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>PROJECT.PARENT_PROJECT_ID</code>.
     */
    public ProjectRecord setParentProjectId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.PARENT_PROJECT_ID</code>.
     */
    public Long getParentProjectId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>PROJECT.PUBLISHER</code>.
     */
    public ProjectRecord setPublisher(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.PUBLISHER</code>.
     */
    public String getPublisher() {
        return (String) get(12);
    }

    /**
     * Setter for <code>PROJECT.PURL</code>.
     */
    public ProjectRecord setPurl(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.PURL</code>.
     */
    public String getPurl() {
        return (String) get(13);
    }

    /**
     * Setter for <code>PROJECT.SWIDTAGID</code>.
     */
    public ProjectRecord setSwidtagid(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.SWIDTAGID</code>.
     */
    public String getSwidtagid() {
        return (String) get(14);
    }

    /**
     * Setter for <code>PROJECT.UUID</code>.
     */
    public ProjectRecord setUuid(UUID value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.UUID</code>.
     */
    public UUID getUuid() {
        return (UUID) get(15);
    }

    /**
     * Setter for <code>PROJECT.VERSION</code>.
     */
    public ProjectRecord setVersion(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.VERSION</code>.
     */
    public String getVersion() {
        return (String) get(16);
    }

    /**
     * Setter for <code>PROJECT.SUPPLIER</code>.
     */
    public ProjectRecord setSupplier(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.SUPPLIER</code>.
     */
    public String getSupplier() {
        return (String) get(17);
    }

    /**
     * Setter for <code>PROJECT.MANUFACTURER</code>.
     */
    public ProjectRecord setManufacturer(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.MANUFACTURER</code>.
     */
    public String getManufacturer() {
        return (String) get(18);
    }

    /**
     * Setter for <code>PROJECT.AUTHORS</code>.
     */
    public ProjectRecord setAuthors(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.AUTHORS</code>.
     */
    public String getAuthors() {
        return (String) get(19);
    }

    /**
     * Setter for <code>PROJECT.IS_LATEST</code>.
     */
    public ProjectRecord setIsLatest(Boolean value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.IS_LATEST</code>.
     */
    public Boolean getIsLatest() {
        return (Boolean) get(20);
    }

    /**
     * Setter for <code>PROJECT.INACTIVE_SINCE</code>.
     */
    public ProjectRecord setInactiveSince(OffsetDateTime value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>PROJECT.INACTIVE_SINCE</code>.
     */
    public OffsetDateTime getInactiveSince() {
        return (OffsetDateTime) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Long id, String classifier, String cpe, String description, JSONB directDependencies, byte[] externalReferences, String group, OffsetDateTime lastBomImported, String lastBomImportedFormat, Double lastRiskscore, String name, Long parentProjectId, String publisher, String purl, String swidtagid, UUID uuid, String version, String supplier, String manufacturer, String authors, Boolean isLatest, OffsetDateTime inactiveSince) {
        super(Project.PROJECT);

        setId(id);
        setClassifier(classifier);
        setCpe(cpe);
        setDescription(description);
        setDirectDependencies(directDependencies);
        setExternalReferences(externalReferences);
        setGroup(group);
        setLastBomImported(lastBomImported);
        setLastBomImportedFormat(lastBomImportedFormat);
        setLastRiskscore(lastRiskscore);
        setName(name);
        setParentProjectId(parentProjectId);
        setPublisher(publisher);
        setPurl(purl);
        setSwidtagid(swidtagid);
        setUuid(uuid);
        setVersion(version);
        setSupplier(supplier);
        setManufacturer(manufacturer);
        setAuthors(authors);
        setIsLatest(isLatest);
        setInactiveSince(inactiveSince);
        resetTouchedOnNotNull();
    }
}
