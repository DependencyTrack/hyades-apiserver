/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import org.dependencytrack.persistence.jooq.generated.tables.UserProjectEffectivePermissions;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserProjectEffectivePermissionsRecord extends TableRecordImpl<UserProjectEffectivePermissionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.LDAPUSER_ID</code>.
     */
    public void setLdapuserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.LDAPUSER_ID</code>.
     */
    public Long getLdapuserId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.MANAGEDUSER_ID</code>.
     */
    public void setManageduserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.MANAGEDUSER_ID</code>.
     */
    public Long getManageduserId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.OIDCUSER_ID</code>.
     */
    public void setOidcuserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.OIDCUSER_ID</code>.
     */
    public Long getOidcuserId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.PROJECT_ID</code>.
     */
    public void setProjectId(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.PERMISSION_ID</code>.
     */
    public void setPermissionId(Long value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.PERMISSION_ID</code>.
     */
    public Long getPermissionId() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.PERMISSION_NAME</code>.
     */
    public void setPermissionName(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>public.USER_PROJECT_EFFECTIVE_PERMISSIONS.PERMISSION_NAME</code>.
     */
    public String getPermissionName() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserProjectEffectivePermissionsRecord
     */
    public UserProjectEffectivePermissionsRecord() {
        super(UserProjectEffectivePermissions.USER_PROJECT_EFFECTIVE_PERMISSIONS);
    }

    /**
     * Create a detached, initialised UserProjectEffectivePermissionsRecord
     */
    public UserProjectEffectivePermissionsRecord(Long ldapuserId, Long manageduserId, Long oidcuserId, Long projectId, Long permissionId, String permissionName) {
        super(UserProjectEffectivePermissions.USER_PROJECT_EFFECTIVE_PERMISSIONS);

        setLdapuserId(ldapuserId);
        setManageduserId(manageduserId);
        setOidcuserId(oidcuserId);
        setProjectId(projectId);
        setPermissionId(permissionId);
        setPermissionName(permissionName);
        resetTouchedOnNotNull();
    }
}
