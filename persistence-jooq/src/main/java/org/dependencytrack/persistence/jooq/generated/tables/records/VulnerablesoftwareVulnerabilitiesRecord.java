/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import org.dependencytrack.persistence.jooq.generated.tables.VulnerablesoftwareVulnerabilities;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VulnerablesoftwareVulnerabilitiesRecord extends TableRecordImpl<VulnerablesoftwareVulnerabilitiesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>public.VULNERABLESOFTWARE_VULNERABILITIES.VULNERABILITY_ID</code>.
     */
    public void setVulnerabilityId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>public.VULNERABLESOFTWARE_VULNERABILITIES.VULNERABILITY_ID</code>.
     */
    public Long getVulnerabilityId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>public.VULNERABLESOFTWARE_VULNERABILITIES.VULNERABLESOFTWARE_ID</code>.
     */
    public void setVulnerablesoftwareId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.VULNERABLESOFTWARE_VULNERABILITIES.VULNERABLESOFTWARE_ID</code>.
     */
    public Long getVulnerablesoftwareId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VulnerablesoftwareVulnerabilitiesRecord
     */
    public VulnerablesoftwareVulnerabilitiesRecord() {
        super(VulnerablesoftwareVulnerabilities.VULNERABLESOFTWARE_VULNERABILITIES);
    }

    /**
     * Create a detached, initialised VulnerablesoftwareVulnerabilitiesRecord
     */
    public VulnerablesoftwareVulnerabilitiesRecord(Long vulnerabilityId, Long vulnerablesoftwareId) {
        super(VulnerablesoftwareVulnerabilities.VULNERABLESOFTWARE_VULNERABILITIES);

        setVulnerabilityId(vulnerabilityId);
        setVulnerablesoftwareId(vulnerablesoftwareId);
        resetTouchedOnNotNull();
    }
}
