/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.NotificationRule;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationRuleRecord extends UpdatableRecordImpl<NotificationRuleRecord> {

    private static final long serialVersionUID = -1505180020;

    /**
     * Setter for <code>NOTIFICATIONRULE.ID</code>.
     */
    public NotificationRuleRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.ENABLED</code>.
     */
    public NotificationRuleRecord setEnabled(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.ENABLED</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.MESSAGE</code>.
     */
    public NotificationRuleRecord setMessage(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.MESSAGE</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.NAME</code>.
     */
    public NotificationRuleRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.NAME</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.NOTIFICATION_LEVEL</code>.
     */
    public NotificationRuleRecord setNotificationLevel(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.NOTIFICATION_LEVEL</code>.
     */
    public String getNotificationLevel() {
        return (String) get(4);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.NOTIFY_CHILDREN</code>.
     */
    public NotificationRuleRecord setNotifyChildren(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.NOTIFY_CHILDREN</code>.
     */
    public Boolean getNotifyChildren() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.NOTIFY_ON</code>.
     */
    public NotificationRuleRecord setNotifyOn(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.NOTIFY_ON</code>.
     */
    public String getNotifyOn() {
        return (String) get(6);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.PUBLISHER</code>.
     */
    public NotificationRuleRecord setPublisher(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.PUBLISHER</code>.
     */
    public Long getPublisher() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.PUBLISHER_CONFIG</code>.
     */
    public NotificationRuleRecord setPublisherConfig(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.PUBLISHER_CONFIG</code>.
     */
    public String getPublisherConfig() {
        return (String) get(8);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.SCOPE</code>.
     */
    public NotificationRuleRecord setScope(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.SCOPE</code>.
     */
    public String getScope() {
        return (String) get(9);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.UUID</code>.
     */
    public NotificationRuleRecord setUuid(UUID value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.UUID</code>.
     */
    public UUID getUuid() {
        return (UUID) get(10);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE.LOG_SUCCESSFUL_PUBLISH</code>.
     */
    public NotificationRuleRecord setLogSuccessfulPublish(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE.LOG_SUCCESSFUL_PUBLISH</code>.
     */
    public Boolean getLogSuccessfulPublish() {
        return (Boolean) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRuleRecord
     */
    public NotificationRuleRecord() {
        super(NotificationRule.NOTIFICATIONRULE);
    }

    /**
     * Create a detached, initialised NotificationRuleRecord
     */
    public NotificationRuleRecord(Long id, Boolean enabled, String message, String name, String notificationLevel, Boolean notifyChildren, String notifyOn, Long publisher, String publisherConfig, String scope, UUID uuid, Boolean logSuccessfulPublish) {
        super(NotificationRule.NOTIFICATIONRULE);

        setId(id);
        setEnabled(enabled);
        setMessage(message);
        setName(name);
        setNotificationLevel(notificationLevel);
        setNotifyChildren(notifyChildren);
        setNotifyOn(notifyOn);
        setPublisher(publisher);
        setPublisherConfig(publisherConfig);
        setScope(scope);
        setUuid(uuid);
        setLogSuccessfulPublish(logSuccessfulPublish);
        resetTouchedOnNotNull();
    }
}
