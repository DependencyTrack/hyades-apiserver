/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import org.dependencytrack.persistence.jooq.generated.tables.OidcUsersPermissions;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OidcUsersPermissionsRecord extends UpdatableRecordImpl<OidcUsersPermissionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>OIDCUSERS_PERMISSIONS.PERMISSION_ID</code>.
     */
    public OidcUsersPermissionsRecord setPermissionId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>OIDCUSERS_PERMISSIONS.PERMISSION_ID</code>.
     */
    public Long getPermissionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>OIDCUSERS_PERMISSIONS.OIDCUSER_ID</code>.
     */
    public OidcUsersPermissionsRecord setOidcuserId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>OIDCUSERS_PERMISSIONS.OIDCUSER_ID</code>.
     */
    public Long getOidcuserId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OidcUsersPermissionsRecord
     */
    public OidcUsersPermissionsRecord() {
        super(OidcUsersPermissions.OIDCUSERS_PERMISSIONS);
    }

    /**
     * Create a detached, initialised OidcUsersPermissionsRecord
     */
    public OidcUsersPermissionsRecord(Long permissionId, Long oidcuserId) {
        super(OidcUsersPermissions.OIDCUSERS_PERMISSIONS);

        setPermissionId(permissionId);
        setOidcuserId(oidcuserId);
        resetTouchedOnNotNull();
    }
}
