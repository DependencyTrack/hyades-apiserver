/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.License;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LicenseRecord extends UpdatableRecordImpl<LicenseRecord> {

    private static final long serialVersionUID = 1138644071;

    /**
     * Setter for <code>LICENSE.ID</code>.
     */
    public LicenseRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>LICENSE.COMMENT</code>.
     */
    public LicenseRecord setComment(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.COMMENT</code>.
     */
    public String getComment() {
        return (String) get(1);
    }

    /**
     * Setter for <code>LICENSE.ISCUSTOMLICENSE</code>.
     */
    public LicenseRecord setIscustomlicense(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.ISCUSTOMLICENSE</code>.
     */
    public Boolean getIscustomlicense() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>LICENSE.ISDEPRECATED</code>.
     */
    public LicenseRecord setIsdeprecated(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.ISDEPRECATED</code>.
     */
    public Boolean getIsdeprecated() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>LICENSE.FSFLIBRE</code>.
     */
    public LicenseRecord setFsflibre(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.FSFLIBRE</code>.
     */
    public Boolean getFsflibre() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>LICENSE.HEADER</code>.
     */
    public LicenseRecord setHeader(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.HEADER</code>.
     */
    public String getHeader() {
        return (String) get(5);
    }

    /**
     * Setter for <code>LICENSE.LICENSEID</code>.
     */
    public LicenseRecord setLicenseid(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.LICENSEID</code>.
     */
    public String getLicenseid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>LICENSE.NAME</code>.
     */
    public LicenseRecord setName(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.NAME</code>.
     */
    public String getName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>LICENSE.ISOSIAPPROVED</code>.
     */
    public LicenseRecord setIsosiapproved(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.ISOSIAPPROVED</code>.
     */
    public Boolean getIsosiapproved() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>LICENSE.SEEALSO</code>.
     */
    public LicenseRecord setSeealso(byte[] value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.SEEALSO</code>.
     */
    public byte[] getSeealso() {
        return (byte[]) get(9);
    }

    /**
     * Setter for <code>LICENSE.TEMPLATE</code>.
     */
    public LicenseRecord setTemplate(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.TEMPLATE</code>.
     */
    public String getTemplate() {
        return (String) get(10);
    }

    /**
     * Setter for <code>LICENSE.TEXT</code>.
     */
    public LicenseRecord setText(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.TEXT</code>.
     */
    public String getText() {
        return (String) get(11);
    }

    /**
     * Setter for <code>LICENSE.UUID</code>.
     */
    public LicenseRecord setUuid(UUID value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>LICENSE.UUID</code>.
     */
    public UUID getUuid() {
        return (UUID) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LicenseRecord
     */
    public LicenseRecord() {
        super(License.LICENSE);
    }

    /**
     * Create a detached, initialised LicenseRecord
     */
    public LicenseRecord(Long id, String comment, Boolean iscustomlicense, Boolean isdeprecated, Boolean fsflibre, String header, String licenseid, String name, Boolean isosiapproved, byte[] seealso, String template, String text, UUID uuid) {
        super(License.LICENSE);

        setId(id);
        setComment(comment);
        setIscustomlicense(iscustomlicense);
        setIsdeprecated(isdeprecated);
        setFsflibre(fsflibre);
        setHeader(header);
        setLicenseid(licenseid);
        setName(name);
        setIsosiapproved(isosiapproved);
        setSeealso(seealso);
        setTemplate(template);
        setText(text);
        setUuid(uuid);
        resetTouchedOnNotNull();
    }
}
