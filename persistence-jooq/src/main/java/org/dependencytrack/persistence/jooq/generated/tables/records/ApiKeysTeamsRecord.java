/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.ApiKeysTeams;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ApiKeysTeamsRecord extends UpdatableRecordImpl<ApiKeysTeamsRecord> {

    private static final long serialVersionUID = -1229569274;

    /**
     * Setter for <code>APIKEYS_TEAMS.TEAM_ID</code>.
     */
    public ApiKeysTeamsRecord setTeamId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>APIKEYS_TEAMS.TEAM_ID</code>.
     */
    public Long getTeamId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>APIKEYS_TEAMS.APIKEY_ID</code>.
     */
    public ApiKeysTeamsRecord setApikeyId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>APIKEYS_TEAMS.APIKEY_ID</code>.
     */
    public Long getApikeyId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiKeysTeamsRecord
     */
    public ApiKeysTeamsRecord() {
        super(ApiKeysTeams.APIKEYS_TEAMS);
    }

    /**
     * Create a detached, initialised ApiKeysTeamsRecord
     */
    public ApiKeysTeamsRecord(Long teamId, Long apikeyId) {
        super(ApiKeysTeams.APIKEYS_TEAMS);

        setTeamId(teamId);
        setApikeyId(apikeyId);
        resetTouchedOnNotNull();
    }
}
