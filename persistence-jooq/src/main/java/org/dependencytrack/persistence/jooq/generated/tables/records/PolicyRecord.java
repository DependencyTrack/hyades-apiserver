/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.Policy;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PolicyRecord extends UpdatableRecordImpl<PolicyRecord> {

    private static final long serialVersionUID = 1730537791;

    /**
     * Setter for <code>POLICY.ID</code>.
     */
    public PolicyRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>POLICY.INCLUDE_CHILDREN</code>.
     */
    public PolicyRecord setIncludeChildren(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.INCLUDE_CHILDREN</code>.
     */
    public Boolean getIncludeChildren() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>POLICY.NAME</code>.
     */
    public PolicyRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.NAME</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>POLICY.OPERATOR</code>.
     */
    public PolicyRecord setOperator(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.OPERATOR</code>.
     */
    public String getOperator() {
        return (String) get(3);
    }

    /**
     * Setter for <code>POLICY.UUID</code>.
     */
    public PolicyRecord setUuid(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.UUID</code>.
     */
    public UUID getUuid() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>POLICY.VIOLATIONSTATE</code>.
     */
    public PolicyRecord setViolationstate(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.VIOLATIONSTATE</code>.
     */
    public String getViolationstate() {
        return (String) get(5);
    }

    /**
     * Setter for <code>POLICY.ONLY_LATEST_PROJECT_VERSION</code>.
     */
    public PolicyRecord setOnlyLatestProjectVersion(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>POLICY.ONLY_LATEST_PROJECT_VERSION</code>.
     */
    public Boolean getOnlyLatestProjectVersion() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PolicyRecord
     */
    public PolicyRecord() {
        super(Policy.POLICY);
    }

    /**
     * Create a detached, initialised PolicyRecord
     */
    public PolicyRecord(Long id, Boolean includeChildren, String name, String operator, UUID uuid, String violationstate, Boolean onlyLatestProjectVersion) {
        super(Policy.POLICY);

        setId(id);
        setIncludeChildren(includeChildren);
        setName(name);
        setOperator(operator);
        setUuid(uuid);
        setViolationstate(violationstate);
        setOnlyLatestProjectVersion(onlyLatestProjectVersion);
        resetTouchedOnNotNull();
    }
}
