/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.ApiKey;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ApiKeyRecord extends UpdatableRecordImpl<ApiKeyRecord> {

    private static final long serialVersionUID = 780881553;

    /**
     * Setter for <code>APIKEY.ID</code>.
     */
    public ApiKeyRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>APIKEY.COMMENT</code>.
     */
    public ApiKeyRecord setComment(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.COMMENT</code>.
     */
    public String getComment() {
        return (String) get(1);
    }

    /**
     * Setter for <code>APIKEY.CREATED</code>.
     */
    public ApiKeyRecord setCreated(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.CREATED</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>APIKEY.LAST_USED</code>.
     */
    public ApiKeyRecord setLastUsed(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.LAST_USED</code>.
     */
    public OffsetDateTime getLastUsed() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>APIKEY.SECRET_HASH</code>.
     */
    public ApiKeyRecord setSecretHash(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.SECRET_HASH</code>.
     */
    public String getSecretHash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>APIKEY.PUBLIC_ID</code>.
     */
    public ApiKeyRecord setPublicId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.PUBLIC_ID</code>.
     */
    public String getPublicId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>APIKEY.IS_LEGACY</code>.
     */
    public ApiKeyRecord setIsLegacy(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>APIKEY.IS_LEGACY</code>.
     */
    public Boolean getIsLegacy() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiKeyRecord
     */
    public ApiKeyRecord() {
        super(ApiKey.APIKEY);
    }

    /**
     * Create a detached, initialised ApiKeyRecord
     */
    public ApiKeyRecord(Long id, String comment, OffsetDateTime created, OffsetDateTime lastUsed, String secretHash, String publicId, Boolean isLegacy) {
        super(ApiKey.APIKEY);

        setId(id);
        setComment(comment);
        setCreated(created);
        setLastUsed(lastUsed);
        setSecretHash(secretHash);
        setPublicId(publicId);
        setIsLegacy(isLegacy);
        resetTouchedOnNotNull();
    }
}
