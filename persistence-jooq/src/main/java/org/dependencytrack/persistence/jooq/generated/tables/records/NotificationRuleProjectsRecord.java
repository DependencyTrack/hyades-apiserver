/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.NotificationRuleProjects;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationRuleProjectsRecord extends TableRecordImpl<NotificationRuleProjectsRecord> {

    private static final long serialVersionUID = -139885710;

    /**
     * Setter for <code>NOTIFICATIONRULE_PROJECTS.NOTIFICATIONRULE_ID</code>.
     */
    public NotificationRuleProjectsRecord setNotificationruleId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE_PROJECTS.NOTIFICATIONRULE_ID</code>.
     */
    public Long getNotificationruleId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>NOTIFICATIONRULE_PROJECTS.PROJECT_ID</code>.
     */
    public NotificationRuleProjectsRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>NOTIFICATIONRULE_PROJECTS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRuleProjectsRecord
     */
    public NotificationRuleProjectsRecord() {
        super(NotificationRuleProjects.NOTIFICATIONRULE_PROJECTS);
    }

    /**
     * Create a detached, initialised NotificationRuleProjectsRecord
     */
    public NotificationRuleProjectsRecord(Long notificationruleId, Long projectId) {
        super(NotificationRuleProjects.NOTIFICATIONRULE_PROJECTS);

        setNotificationruleId(notificationruleId);
        setProjectId(projectId);
        resetTouchedOnNotNull();
    }
}
