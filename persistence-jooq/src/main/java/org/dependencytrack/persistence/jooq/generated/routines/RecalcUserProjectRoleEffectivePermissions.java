/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.routines;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.DefaultSchema;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RecalcUserProjectRoleEffectivePermissions extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 981866517;

    /**
     * The parameter
     * <code>recalc_user_project_role_effective_permissions.project_ids</code>.
     */
    public static final Parameter<Long[]> PROJECT_IDS = Internal.createParameter("project_ids", SQLDataType.BIGINT.array(), false, false);

    /**
     * Create a new routine call instance
     */
    public RecalcUserProjectRoleEffectivePermissions() {
        super("recalc_user_project_role_effective_permissions", DefaultSchema.DEFAULT_SCHEMA, DSL.comment(""));

        addInParameter(PROJECT_IDS);
    }

    /**
     * Set the <code>project_ids</code> parameter IN value to the routine
     */
    public void setProjectIds(Long[] value) {
        setValue(PROJECT_IDS, value);
    }
}
