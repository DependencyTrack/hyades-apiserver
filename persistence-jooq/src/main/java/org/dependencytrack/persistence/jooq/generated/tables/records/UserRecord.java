/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.User;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

    private static final long serialVersionUID = -1740382829;

    /**
     * Setter for <code>USER.ID</code>.
     */
    public UserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>USER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>USER.USERNAME</code>.
     */
    public UserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>USER.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>USER.EMAIL</code>.
     */
    public UserRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>USER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>USER.TYPE</code>.
     */
    public UserRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>USER.TYPE</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>USER.DN</code>.
     */
    public UserRecord setDn(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>USER.DN</code>.
     */
    public String getDn() {
        return (String) get(4);
    }

    /**
     * Setter for <code>USER.FULLNAME</code>.
     */
    public UserRecord setFullname(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>USER.FULLNAME</code>.
     */
    public String getFullname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>USER.FORCE_PASSWORD_CHANGE</code>.
     */
    public UserRecord setForcePasswordChange(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>USER.FORCE_PASSWORD_CHANGE</code>.
     */
    public Boolean getForcePasswordChange() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>USER.SUSPENDED</code>.
     */
    public UserRecord setSuspended(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>USER.SUSPENDED</code>.
     */
    public Boolean getSuspended() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>USER.NON_EXPIRY_PASSWORD</code>.
     */
    public UserRecord setNonExpiryPassword(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>USER.NON_EXPIRY_PASSWORD</code>.
     */
    public Boolean getNonExpiryPassword() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>USER.LAST_PASSWORD_CHANGE</code>.
     */
    public UserRecord setLastPasswordChange(OffsetDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>USER.LAST_PASSWORD_CHANGE</code>.
     */
    public OffsetDateTime getLastPasswordChange() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>USER.PASSWORD</code>.
     */
    public UserRecord setPassword(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>USER.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(10);
    }

    /**
     * Setter for <code>USER.SUBJECT_IDENTIFIER</code>.
     */
    public UserRecord setSubjectIdentifier(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>USER.SUBJECT_IDENTIFIER</code>.
     */
    public String getSubjectIdentifier() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String username, String email, String type, String dn, String fullname, Boolean forcePasswordChange, Boolean suspended, Boolean nonExpiryPassword, OffsetDateTime lastPasswordChange, String password, String subjectIdentifier) {
        super(User.USER);

        setId(id);
        setUsername(username);
        setEmail(email);
        setType(type);
        setDn(dn);
        setFullname(fullname);
        setForcePasswordChange(forcePasswordChange);
        setSuspended(suspended);
        setNonExpiryPassword(nonExpiryPassword);
        setLastPasswordChange(lastPasswordChange);
        setPassword(password);
        setSubjectIdentifier(subjectIdentifier);
        resetTouchedOnNotNull();
    }
}
