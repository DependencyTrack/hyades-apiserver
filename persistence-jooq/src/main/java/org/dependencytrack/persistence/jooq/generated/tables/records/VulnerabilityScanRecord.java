/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.VulnerabilityScan;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VulnerabilityScanRecord extends UpdatableRecordImpl<VulnerabilityScanRecord> {

    private static final long serialVersionUID = 2011955662;

    /**
     * Setter for <code>VULNERABILITYSCAN.ID</code>.
     */
    public VulnerabilityScanRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.EXPECTED_RESULTS</code>.
     */
    public VulnerabilityScanRecord setExpectedResults(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.EXPECTED_RESULTS</code>.
     */
    public Integer getExpectedResults() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.FAILURE_THRESHOLD</code>.
     */
    public VulnerabilityScanRecord setFailureThreshold(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.FAILURE_THRESHOLD</code>.
     */
    public Double getFailureThreshold() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.RECEIVED_RESULTS</code>.
     */
    public VulnerabilityScanRecord setReceivedResults(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.RECEIVED_RESULTS</code>.
     */
    public Integer getReceivedResults() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.SCAN_FAILED</code>.
     */
    public VulnerabilityScanRecord setScanFailed(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.SCAN_FAILED</code>.
     */
    public Long getScanFailed() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.SCAN_TOTAL</code>.
     */
    public VulnerabilityScanRecord setScanTotal(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.SCAN_TOTAL</code>.
     */
    public Long getScanTotal() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.STARTED_AT</code>.
     */
    public VulnerabilityScanRecord setStartedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.STARTED_AT</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.STATUS</code>.
     */
    public VulnerabilityScanRecord setStatus(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.TARGET_IDENTIFIER</code>.
     */
    public VulnerabilityScanRecord setTargetIdentifier(UUID value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.TARGET_IDENTIFIER</code>.
     */
    public UUID getTargetIdentifier() {
        return (UUID) get(8);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.TARGET_TYPE</code>.
     */
    public VulnerabilityScanRecord setTargetType(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.TARGET_TYPE</code>.
     */
    public String getTargetType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.TOKEN</code>.
     */
    public VulnerabilityScanRecord setToken(UUID value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.TOKEN</code>.
     */
    public UUID getToken() {
        return (UUID) get(10);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.UPDATED_AT</code>.
     */
    public VulnerabilityScanRecord setUpdatedAt(OffsetDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.UPDATED_AT</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for <code>VULNERABILITYSCAN.VERSION</code>.
     */
    public VulnerabilityScanRecord setVersion(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITYSCAN.VERSION</code>.
     */
    public Long getVersion() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VulnerabilityScanRecord
     */
    public VulnerabilityScanRecord() {
        super(VulnerabilityScan.VULNERABILITYSCAN);
    }

    /**
     * Create a detached, initialised VulnerabilityScanRecord
     */
    public VulnerabilityScanRecord(Long id, Integer expectedResults, Double failureThreshold, Integer receivedResults, Long scanFailed, Long scanTotal, OffsetDateTime startedAt, String status, UUID targetIdentifier, String targetType, UUID token, OffsetDateTime updatedAt, Long version) {
        super(VulnerabilityScan.VULNERABILITYSCAN);

        setId(id);
        setExpectedResults(expectedResults);
        setFailureThreshold(failureThreshold);
        setReceivedResults(receivedResults);
        setScanFailed(scanFailed);
        setScanTotal(scanTotal);
        setStartedAt(startedAt);
        setStatus(status);
        setTargetIdentifier(targetIdentifier);
        setTargetType(targetType);
        setToken(token);
        setUpdatedAt(updatedAt);
        setVersion(version);
        resetTouchedOnNotNull();
    }
}
