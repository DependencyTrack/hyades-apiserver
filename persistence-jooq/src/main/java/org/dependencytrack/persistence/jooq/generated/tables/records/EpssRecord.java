/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.Epss;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EpssRecord extends UpdatableRecordImpl<EpssRecord> {

    private static final long serialVersionUID = 1875280511;

    /**
     * Setter for <code>EPSS.ID</code>.
     */
    public EpssRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>EPSS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>EPSS.CVE</code>.
     */
    public EpssRecord setCve(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>EPSS.CVE</code>.
     */
    public String getCve() {
        return (String) get(1);
    }

    /**
     * Setter for <code>EPSS.PERCENTILE</code>.
     */
    public EpssRecord setPercentile(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>EPSS.PERCENTILE</code>.
     */
    public BigDecimal getPercentile() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>EPSS.SCORE</code>.
     */
    public EpssRecord setScore(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>EPSS.SCORE</code>.
     */
    public BigDecimal getScore() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EpssRecord
     */
    public EpssRecord() {
        super(Epss.EPSS);
    }

    /**
     * Create a detached, initialised EpssRecord
     */
    public EpssRecord(Long id, String cve, BigDecimal percentile, BigDecimal score) {
        super(Epss.EPSS);

        setId(id);
        setCve(cve);
        setPercentile(percentile);
        setScore(score);
        resetTouchedOnNotNull();
    }
}
