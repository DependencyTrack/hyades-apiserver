/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.VulnerabilityPolicyBundle;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VulnerabilityPolicyBundleRecord extends UpdatableRecordImpl<VulnerabilityPolicyBundleRecord> {

    private static final long serialVersionUID = -1454362966;

    /**
     * Setter for <code>VULNERABILITY_POLICY_BUNDLE.ID</code>.
     */
    public VulnerabilityPolicyBundleRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITY_POLICY_BUNDLE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>VULNERABILITY_POLICY_BUNDLE.URL</code>.
     */
    public VulnerabilityPolicyBundleRecord setUrl(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITY_POLICY_BUNDLE.URL</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>VULNERABILITY_POLICY_BUNDLE.HASH</code>.
     */
    public VulnerabilityPolicyBundleRecord setHash(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITY_POLICY_BUNDLE.HASH</code>.
     */
    public String getHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>VULNERABILITY_POLICY_BUNDLE.LAST_SUCCESSFUL_SYNC</code>.
     */
    public VulnerabilityPolicyBundleRecord setLastSuccessfulSync(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITY_POLICY_BUNDLE.LAST_SUCCESSFUL_SYNC</code>.
     */
    public OffsetDateTime getLastSuccessfulSync() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>VULNERABILITY_POLICY_BUNDLE.CREATED</code>.
     */
    public VulnerabilityPolicyBundleRecord setCreated(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITY_POLICY_BUNDLE.CREATED</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>VULNERABILITY_POLICY_BUNDLE.UPDATED</code>.
     */
    public VulnerabilityPolicyBundleRecord setUpdated(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>VULNERABILITY_POLICY_BUNDLE.UPDATED</code>.
     */
    public OffsetDateTime getUpdated() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VulnerabilityPolicyBundleRecord
     */
    public VulnerabilityPolicyBundleRecord() {
        super(VulnerabilityPolicyBundle.VULNERABILITY_POLICY_BUNDLE);
    }

    /**
     * Create a detached, initialised VulnerabilityPolicyBundleRecord
     */
    public VulnerabilityPolicyBundleRecord(Long id, String url, String hash, OffsetDateTime lastSuccessfulSync, OffsetDateTime created, OffsetDateTime updated) {
        super(VulnerabilityPolicyBundle.VULNERABILITY_POLICY_BUNDLE);

        setId(id);
        setUrl(url);
        setHash(hash);
        setLastSuccessfulSync(lastSuccessfulSync);
        setCreated(created);
        setUpdated(updated);
        resetTouchedOnNotNull();
    }
}
