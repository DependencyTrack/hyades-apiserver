/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.Permission;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PermissionRecord extends UpdatableRecordImpl<PermissionRecord> {

    private static final long serialVersionUID = -701052856;

    /**
     * Setter for <code>PERMISSION.ID</code>.
     */
    public PermissionRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PERMISSION.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PERMISSION.DESCRIPTION</code>.
     */
    public PermissionRecord setDescription(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PERMISSION.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PERMISSION.NAME</code>.
     */
    public PermissionRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PERMISSION.NAME</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionRecord
     */
    public PermissionRecord() {
        super(Permission.PERMISSION);
    }

    /**
     * Create a detached, initialised PermissionRecord
     */
    public PermissionRecord(Long id, String description, String name) {
        super(Permission.PERMISSION);

        setId(id);
        setDescription(description);
        setName(name);
        resetTouchedOnNotNull();
    }
}
