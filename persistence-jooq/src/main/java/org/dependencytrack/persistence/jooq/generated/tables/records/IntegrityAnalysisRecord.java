/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.IntegrityAnalysis;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class IntegrityAnalysisRecord extends UpdatableRecordImpl<IntegrityAnalysisRecord> {

    private static final long serialVersionUID = 814859541;

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.ID</code>.
     */
    public IntegrityAnalysisRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.COMPONENT_ID</code>.
     */
    public IntegrityAnalysisRecord setComponentId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.COMPONENT_ID</code>.
     */
    public Long getComponentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.INTEGRITY_CHECK_STATUS</code>.
     */
    public IntegrityAnalysisRecord setIntegrityCheckStatus(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.INTEGRITY_CHECK_STATUS</code>.
     */
    public String getIntegrityCheckStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.MD5_HASH_MATCH_STATUS</code>.
     */
    public IntegrityAnalysisRecord setMd5HashMatchStatus(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.MD5_HASH_MATCH_STATUS</code>.
     */
    public String getMd5HashMatchStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.SHA1_HASH_MATCH_STATUS</code>.
     */
    public IntegrityAnalysisRecord setSha1HashMatchStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.SHA1_HASH_MATCH_STATUS</code>.
     */
    public String getSha1HashMatchStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.SHA256_HASH_MATCH_STATUS</code>.
     */
    public IntegrityAnalysisRecord setSha256HashMatchStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.SHA256_HASH_MATCH_STATUS</code>.
     */
    public String getSha256HashMatchStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.SHA512_HASH_MATCH_STATUS</code>.
     */
    public IntegrityAnalysisRecord setSha512HashMatchStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.SHA512_HASH_MATCH_STATUS</code>.
     */
    public String getSha512HashMatchStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>INTEGRITY_ANALYSIS.UPDATED_AT</code>.
     */
    public IntegrityAnalysisRecord setUpdatedAt(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>INTEGRITY_ANALYSIS.UPDATED_AT</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IntegrityAnalysisRecord
     */
    public IntegrityAnalysisRecord() {
        super(IntegrityAnalysis.INTEGRITY_ANALYSIS);
    }

    /**
     * Create a detached, initialised IntegrityAnalysisRecord
     */
    public IntegrityAnalysisRecord(Long id, Long componentId, String integrityCheckStatus, String md5HashMatchStatus, String sha1HashMatchStatus, String sha256HashMatchStatus, String sha512HashMatchStatus, OffsetDateTime updatedAt) {
        super(IntegrityAnalysis.INTEGRITY_ANALYSIS);

        setId(id);
        setComponentId(componentId);
        setIntegrityCheckStatus(integrityCheckStatus);
        setMd5HashMatchStatus(md5HashMatchStatus);
        setSha1HashMatchStatus(sha1HashMatchStatus);
        setSha256HashMatchStatus(sha256HashMatchStatus);
        setSha512HashMatchStatus(sha512HashMatchStatus);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
