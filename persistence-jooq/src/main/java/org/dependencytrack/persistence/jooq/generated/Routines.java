/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated;


import java.math.BigDecimal;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.routines.CalcRiskScore;
import org.dependencytrack.persistence.jooq.generated.routines.HasProjectAccess;
import org.dependencytrack.persistence.jooq.generated.routines.JsonbVulnAliases;
import org.dependencytrack.persistence.jooq.generated.routines.RecalcUserProjectEffectivePermissions;
import org.dependencytrack.persistence.jooq.generated.routines.RecalcUserProjectRoleEffectivePermissions;
import org.dependencytrack.persistence.jooq.generated.routines.UpdateComponentMetrics;
import org.dependencytrack.persistence.jooq.generated.routines.UpdatePortfolioMetrics;
import org.dependencytrack.persistence.jooq.generated.routines.UpdateProjectMetrics;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.JSONB;


/**
 * Convenience access to all stored procedures and functions in the default
 * schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Routines {

    /**
     * Call <code>CALC_RISK_SCORE</code>
     */
    public static BigDecimal calcRiskScore(
          Configuration configuration
        , Integer critical
        , Integer high
        , Integer medium
        , Integer low
        , Integer unassigned
    ) {
        CalcRiskScore f = new CalcRiskScore();
        f.setCritical(critical);
        f.setHigh(high);
        f.setMedium(medium);
        f.setLow(low);
        f.setUnassigned(unassigned);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>CALC_RISK_SCORE</code> as a field.
     */
    public static Field<BigDecimal> calcRiskScore(
          Integer critical
        , Integer high
        , Integer medium
        , Integer low
        , Integer unassigned
    ) {
        CalcRiskScore f = new CalcRiskScore();
        f.setCritical(critical);
        f.setHigh(high);
        f.setMedium(medium);
        f.setLow(low);
        f.setUnassigned(unassigned);

        return f.asField();
    }

    /**
     * Get <code>CALC_RISK_SCORE</code> as a field.
     */
    public static Field<BigDecimal> calcRiskScore(
          Field<Integer> critical
        , Field<Integer> high
        , Field<Integer> medium
        , Field<Integer> low
        , Field<Integer> unassigned
    ) {
        CalcRiskScore f = new CalcRiskScore();
        f.setCritical(critical);
        f.setHigh(high);
        f.setMedium(medium);
        f.setLow(low);
        f.setUnassigned(unassigned);

        return f.asField();
    }

    /**
     * Call <code>has_project_access</code>
     */
    public static Boolean hasProjectAccess(
          Configuration configuration
        , Long projectId
        , Long[] teamIds
    ) {
        HasProjectAccess f = new HasProjectAccess();
        f.setProjectId(projectId);
        f.setTeamIds(teamIds);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>has_project_access</code> as a field.
     */
    public static Field<Boolean> hasProjectAccess(
          Long projectId
        , Long[] teamIds
    ) {
        HasProjectAccess f = new HasProjectAccess();
        f.setProjectId(projectId);
        f.setTeamIds(teamIds);

        return f.asField();
    }

    /**
     * Get <code>has_project_access</code> as a field.
     */
    public static Field<Boolean> hasProjectAccess(
          Field<Long> projectId
        , Field<Long[]> teamIds
    ) {
        HasProjectAccess f = new HasProjectAccess();
        f.setProjectId(projectId);
        f.setTeamIds(teamIds);

        return f.asField();
    }

    /**
     * Call <code>jsonb_vuln_aliases</code>
     */
    public static JSONB jsonbVulnAliases(
          Configuration configuration
        , String vulnSource
        , String vulnId
    ) {
        JsonbVulnAliases f = new JsonbVulnAliases();
        f.setVulnSource(vulnSource);
        f.setVulnId(vulnId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>jsonb_vuln_aliases</code> as a field.
     */
    public static Field<JSONB> jsonbVulnAliases(
          String vulnSource
        , String vulnId
    ) {
        JsonbVulnAliases f = new JsonbVulnAliases();
        f.setVulnSource(vulnSource);
        f.setVulnId(vulnId);

        return f.asField();
    }

    /**
     * Get <code>jsonb_vuln_aliases</code> as a field.
     */
    public static Field<JSONB> jsonbVulnAliases(
          Field<String> vulnSource
        , Field<String> vulnId
    ) {
        JsonbVulnAliases f = new JsonbVulnAliases();
        f.setVulnSource(vulnSource);
        f.setVulnId(vulnId);

        return f.asField();
    }

    /**
     * Call <code>recalc_user_project_effective_permissions</code>
     */
    public static void recalcUserProjectEffectivePermissions(
          Configuration configuration
        , Long[] projectIds
    ) {
        RecalcUserProjectEffectivePermissions p = new RecalcUserProjectEffectivePermissions();
        p.setProjectIds(projectIds);

        p.execute(configuration);
    }

    /**
     * Call <code>recalc_user_project_role_effective_permissions</code>
     */
    public static void recalcUserProjectRoleEffectivePermissions(
          Configuration configuration
        , Long[] projectIds
    ) {
        RecalcUserProjectRoleEffectivePermissions p = new RecalcUserProjectRoleEffectivePermissions();
        p.setProjectIds(projectIds);

        p.execute(configuration);
    }

    /**
     * Call <code>UPDATE_COMPONENT_METRICS</code>
     */
    public static void updateComponentMetrics(
          Configuration configuration
        , UUID componentUuid
    ) {
        UpdateComponentMetrics p = new UpdateComponentMetrics();
        p.setComponentUuid(componentUuid);

        p.execute(configuration);
    }

    /**
     * Call <code>UPDATE_PORTFOLIO_METRICS</code>
     */
    public static void updatePortfolioMetrics(
          Configuration configuration
    ) {
        UpdatePortfolioMetrics p = new UpdatePortfolioMetrics();

        p.execute(configuration);
    }

    /**
     * Call <code>UPDATE_PROJECT_METRICS</code>
     */
    public static void updateProjectMetrics(
          Configuration configuration
        , UUID projectUuid
    ) {
        UpdateProjectMetrics p = new UpdateProjectMetrics();
        p.setProjectUuid(projectUuid);

        p.execute(configuration);
    }
}
