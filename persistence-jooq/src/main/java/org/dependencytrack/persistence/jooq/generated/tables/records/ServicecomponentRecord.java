/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.util.UUID;

import org.dependencytrack.persistence.jooq.generated.tables.Servicecomponent;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ServicecomponentRecord extends UpdatableRecordImpl<ServicecomponentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.SERVICECOMPONENT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.AUTHENTICATED</code>.
     */
    public void setAuthenticated(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.AUTHENTICATED</code>.
     */
    public Boolean getAuthenticated() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.X_TRUST_BOUNDARY</code>.
     */
    public void setXTrustBoundary(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.X_TRUST_BOUNDARY</code>.
     */
    public Boolean getXTrustBoundary() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.DATA</code>.
     */
    public void setData(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.DATA</code>.
     */
    public byte[] getData() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.ENDPOINTS</code>.
     */
    public void setEndpoints(byte[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.ENDPOINTS</code>.
     */
    public byte[] getEndpoints() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.EXTERNAL_REFERENCES</code>.
     */
    public void setExternalReferences(byte[] value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.EXTERNAL_REFERENCES</code>.
     */
    public byte[] getExternalReferences() {
        return (byte[]) get(6);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.GROUP</code>.
     */
    public void setGroup(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.GROUP</code>.
     */
    public String getGroup() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.LAST_RISKSCORE</code>.
     */
    public void setLastRiskscore(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.LAST_RISKSCORE</code>.
     */
    public Double getLastRiskscore() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.NAME</code>.
     */
    public void setName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.NAME</code>.
     */
    public String getName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.TEXT</code>.
     */
    public void setText(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.TEXT</code>.
     */
    public String getText() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>public.SERVICECOMPONENT.PARENT_SERVICECOMPONENT_ID</code>.
     */
    public void setParentServicecomponentId(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>public.SERVICECOMPONENT.PARENT_SERVICECOMPONENT_ID</code>.
     */
    public Long getParentServicecomponentId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.PROJECT_ID</code>.
     */
    public void setProjectId(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.PROVIDER_ID</code>.
     */
    public void setProviderId(byte[] value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.PROVIDER_ID</code>.
     */
    public byte[] getProviderId() {
        return (byte[]) get(13);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.UUID</code>.
     */
    public void setUuid(UUID value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.UUID</code>.
     */
    public UUID getUuid() {
        return (UUID) get(14);
    }

    /**
     * Setter for <code>public.SERVICECOMPONENT.VERSION</code>.
     */
    public void setVersion(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.SERVICECOMPONENT.VERSION</code>.
     */
    public String getVersion() {
        return (String) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServicecomponentRecord
     */
    public ServicecomponentRecord() {
        super(Servicecomponent.SERVICECOMPONENT);
    }

    /**
     * Create a detached, initialised ServicecomponentRecord
     */
    public ServicecomponentRecord(Long id, Boolean authenticated, Boolean xTrustBoundary, byte[] data, String description, byte[] endpoints, byte[] externalReferences, String group, Double lastRiskscore, String name, String text, Long parentServicecomponentId, Long projectId, byte[] providerId, UUID uuid, String version) {
        super(Servicecomponent.SERVICECOMPONENT);

        setId(id);
        setAuthenticated(authenticated);
        setXTrustBoundary(xTrustBoundary);
        setData(data);
        setDescription(description);
        setEndpoints(endpoints);
        setExternalReferences(externalReferences);
        setGroup(group);
        setLastRiskscore(lastRiskscore);
        setName(name);
        setText(text);
        setParentServicecomponentId(parentServicecomponentId);
        setProjectId(projectId);
        setProviderId(providerId);
        setUuid(uuid);
        setVersion(version);
        resetTouchedOnNotNull();
    }
}
