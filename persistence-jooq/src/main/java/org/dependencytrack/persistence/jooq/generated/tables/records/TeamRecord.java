/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.Team;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TeamRecord extends UpdatableRecordImpl<TeamRecord> {

    private static final long serialVersionUID = -586163501;

    /**
     * Setter for <code>TEAM.ID</code>.
     */
    public TeamRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TEAM.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>TEAM.NAME</code>.
     */
    public TeamRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TEAM.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TEAM.UUID</code>.
     */
    public TeamRecord setUuid(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TEAM.UUID</code>.
     */
    public String getUuid() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeamRecord
     */
    public TeamRecord() {
        super(Team.TEAM);
    }

    /**
     * Create a detached, initialised TeamRecord
     */
    public TeamRecord(Long id, String name, String uuid) {
        super(Team.TEAM);

        setId(id);
        setName(name);
        setUuid(uuid);
        resetTouchedOnNotNull();
    }
}
