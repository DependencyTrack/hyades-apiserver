/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.dependencytrack.persistence.jooq.generated.tables.WorkflowState;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.20.4",
        "schema version:v5.6.0-28"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class WorkflowStateRecord extends UpdatableRecordImpl<WorkflowStateRecord> {

    private static final long serialVersionUID = 99722404;

    /**
     * Setter for <code>WORKFLOW_STATE.ID</code>.
     */
    public WorkflowStateRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.FAILURE_REASON</code>.
     */
    public WorkflowStateRecord setFailureReason(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.FAILURE_REASON</code>.
     */
    public String getFailureReason() {
        return (String) get(1);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.PARENT_STEP_ID</code>.
     */
    public WorkflowStateRecord setParentStepId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.PARENT_STEP_ID</code>.
     */
    public Long getParentStepId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.STARTED_AT</code>.
     */
    public WorkflowStateRecord setStartedAt(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.STARTED_AT</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.STATUS</code>.
     */
    public WorkflowStateRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.STEP</code>.
     */
    public WorkflowStateRecord setStep(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.STEP</code>.
     */
    public String getStep() {
        return (String) get(5);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.TOKEN</code>.
     */
    public WorkflowStateRecord setToken(UUID value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.TOKEN</code>.
     */
    public UUID getToken() {
        return (UUID) get(6);
    }

    /**
     * Setter for <code>WORKFLOW_STATE.UPDATED_AT</code>.
     */
    public WorkflowStateRecord setUpdatedAt(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>WORKFLOW_STATE.UPDATED_AT</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorkflowStateRecord
     */
    public WorkflowStateRecord() {
        super(WorkflowState.WORKFLOW_STATE);
    }

    /**
     * Create a detached, initialised WorkflowStateRecord
     */
    public WorkflowStateRecord(Long id, String failureReason, Long parentStepId, OffsetDateTime startedAt, String status, String step, UUID token, OffsetDateTime updatedAt) {
        super(WorkflowState.WORKFLOW_STATE);

        setId(id);
        setFailureReason(failureReason);
        setParentStepId(parentStepId);
        setStartedAt(startedAt);
        setStatus(status);
        setStep(step);
        setToken(token);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
