/*
 * This file is generated by jOOQ.
 */
package org.dependencytrack.persistence.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import org.dependencytrack.persistence.jooq.generated.tables.Violationanalysiscomment;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViolationanalysiscommentRecord extends UpdatableRecordImpl<ViolationanalysiscommentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.VIOLATIONANALYSISCOMMENT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.VIOLATIONANALYSISCOMMENT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.VIOLATIONANALYSISCOMMENT.COMMENT</code>.
     */
    public void setComment(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.VIOLATIONANALYSISCOMMENT.COMMENT</code>.
     */
    public String getComment() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.VIOLATIONANALYSISCOMMENT.COMMENTER</code>.
     */
    public void setCommenter(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.VIOLATIONANALYSISCOMMENT.COMMENTER</code>.
     */
    public String getCommenter() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.VIOLATIONANALYSISCOMMENT.TIMESTAMP</code>.
     */
    public void setTimestamp(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.VIOLATIONANALYSISCOMMENT.TIMESTAMP</code>.
     */
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for
     * <code>public.VIOLATIONANALYSISCOMMENT.VIOLATIONANALYSIS_ID</code>.
     */
    public void setViolationanalysisId(Long value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>public.VIOLATIONANALYSISCOMMENT.VIOLATIONANALYSIS_ID</code>.
     */
    public Long getViolationanalysisId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViolationanalysiscommentRecord
     */
    public ViolationanalysiscommentRecord() {
        super(Violationanalysiscomment.VIOLATIONANALYSISCOMMENT);
    }

    /**
     * Create a detached, initialised ViolationanalysiscommentRecord
     */
    public ViolationanalysiscommentRecord(Long id, String comment, String commenter, OffsetDateTime timestamp, Long violationanalysisId) {
        super(Violationanalysiscomment.VIOLATIONANALYSISCOMMENT);

        setId(id);
        setComment(comment);
        setCommenter(commenter);
        setTimestamp(timestamp);
        setViolationanalysisId(violationanalysisId);
        resetTouchedOnNotNull();
    }
}
